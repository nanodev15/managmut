/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nehemie_mutuelle;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import static nehemie_mutuelle.main.conn;

/**
 *
 * @author elommarcarnold
 */
public class Epargneview2 extends javax.swing.JFrame {
    private Connection conn;
     private Vector<Vector<Object>> data;
     Vector<String> header = new Vector<String>();

    /** Creates new form Epargneview2 */
    public Epargneview2() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        demoDateField1 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jLabel3 = new javax.swing.JLabel();
        demoDateField2 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/synthèse.png"))); // NOI18N

        jTable1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        header.add("Identifiant");
        header.add("Date");
        header.add("Motif");
        header.add("Epargnant");
        header.add("Montant");
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Identifiant", "Date", "Motif", "Epargnant", "Montant"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Date début: ");

        jLabel3.setText("Date fin:");

        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(78, 78, 78)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(demoDateField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(177, 177, 177)
                        .add(jLabel3)
                        .add(18, 18, 18)
                        .add(demoDateField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(347, 347, 347)
                        .add(jButton1))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 793, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(39, 39, 39)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(demoDateField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(demoDateField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(61, 61, 61)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 174, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 64, Short.MAX_VALUE)
                .add(jButton1)
                .add(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            data=getMembres();
        } catch (Exception ex) {
            Logger.getLogger(Epargneview2.class.getName()).log(Level.SEVERE, null, ex);
        }
//header.add("Identifiant"); 
//header.add("Date");
//header.add("Motif"); 
//header.add("Epargnant"); 
//header.add("Montant"); 
try {
            // TODO add your handling code here:
            data=getMembres();
        } catch (Exception ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
//jTable1.setModel(new javax.swing.table.DefaultTableModel(
//            data,header
//        ));



  

// new javax.swing.table.DefaultTableModel(
//    data,header
jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

    Class[] types = {Integer.class, String.class, String.class,
        String.class,  Integer.class  };

    @Override
    public Class getColumnClass(int columnIndex) {
        return this.types[columnIndex];
    }
});
    }//GEN-LAST:event_jButton1ActionPerformed
    public String getNamefromId(int id, String type) throws SQLException{
        if(type.equalsIgnoreCase("Enfant")){
             String nom="";
             PreparedStatement pre;
             pre = conn.prepareStatement("SELECT Nom, Prenoms FROM Profil_enfant WHERE idProfil_enfant='"+id+"';");
             ResultSet rs = pre.executeQuery();
              while(rs.next()) {
                nom =rs.getString("Nom")+","+rs.getString("Prenoms");
              }
              return nom;
        } else if ((type.equalsIgnoreCase("Adulte"))){ 
            String nom="";
             PreparedStatement pre;
             pre = conn.prepareStatement("SELECT Noms, Prenoms FROM Profil_adulte WHERE idProfil_adulte='"+id+"';");
             ResultSet rs = pre.executeQuery();
              while(rs.next()) {
                nom =rs.getString("Noms")+","+rs.getString("Prenoms");
              }
              return nom;
            
        } else {
            String nom="";
             PreparedStatement pre;
             pre = conn.prepareStatement("SELECT Raison_sociale FROM Profil_persmorale WHERE idProfil_persmorale='"+id+"';");
             ResultSet rs = pre.executeQuery();
              while(rs.next()) {
                nom =rs.getString("Raison_sociale");
              }
              return nom;
            
        }
            
    }
    
    public  Vector  getMembres() throws Exception {
    conn = Connect.ConnectDb();
    int i=1;
    java.sql.Date sqlDate1=new java.sql.Date(demoDateField1.getDate().getTime());
    java.sql.Date sqlDate2=new java.sql.Date(demoDateField2.getDate().getTime());
    PreparedStatement pre;
        System.out.println("requête"+"SELECT * FROM Epargne WHERE DateEpargne between '"+sqlDate1+"' AND '"+demoDateField2.getDate()+ "';");
    pre = conn.prepareStatement("SELECT * FROM Epargne WHERE DateEpargne between '"+sqlDate1+"' AND '"+sqlDate2+ "';");
    ResultSet rs = pre.executeQuery();
   // Vector<Vector<String>> membreVector = new Vector<Vector<String>>();
    Vector<Vector> membreVector = new Vector<Vector>();
    while(rs.next()) {
     //   Vector<String> membre = new Vector<String>();
     //   membre.add(String.valueOf(i)); 
        Vector<Object> membre = new Vector<Object>();
        membre.add(i);
        membre.add(rs.getString("DateEpargne")); 
        membre.add(rs.getString("MotifEpargne")); 
        String type=rs.getString("TypeEpargnant");
        int id= rs.getInt("IdEpargnant");
        String epargnant=getNamefromId(id, type);
        membre.add(epargnant);
        membre.add(rs.getInt("MontantEpargne")); 
   //
        membreVector.add(membre);
        i++;
    }
    
    
   

/*Close the connection after use (MUST)*/
    if(conn!=null)
        conn.close();

    return membreVector;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Epargneview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Epargneview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Epargneview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Epargneview2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Epargneview2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField1;
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
