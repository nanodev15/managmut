/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nehemie_mutuelle;

import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JSeparator;
import javax.swing.ListCellRenderer;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.basic.BasicComboBoxRenderer;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import org.apache.commons.lang.WordUtils;
import com.google.i18n.phonenumbers.NumberParseException;
import com.google.i18n.phonenumbers.PhoneNumberUtil;
import com.google.i18n.phonenumbers.Phonenumber;
import com.google.i18n.phonenumbers.PhoneNumberMatch;
import java.awt.Color;
import javax.swing.JFormattedTextField.AbstractFormatterFactory;
import javax.swing.UIManager;

/**
 *
 * @author elommarcarnold
 */
public class Adhesion_enfant extends javax.swing.JFrame {
    String enfant_photourl=getClass().getResource("blank.png").getPath();
    String replegal_photourl=getClass().getResource("blank.png").getPath();
    private main main;
    Connection connect=null;
    PreparedStatement pst=null;
    Connect conn=new Connect();
    
    

    /**
     * Creates new form Adhesion_enfant
     */
    public Adhesion_enfant(main mn) {
        this.main=mn;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    private static class Emailvalidator {

        private Pattern pattern;
    private Matcher matcher;

    private static final String EMAIL_PATTERN = 
        "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

    public Emailvalidator() {
        pattern = Pattern.compile(EMAIL_PATTERN);
    }

    /**
     * Validate hex with regular expression
     * 
     * @param hex
     *            hex for validation
     * @return true valid hex, false invalid hex
     */
    public boolean validate(final String hex) {

        matcher = pattern.matcher(hex);
        return matcher.matches();

    }
    }
    
    class UppercaseDocumentFilter extends DocumentFilter {
    public void insertString(DocumentFilter.FilterBypass fb, int offset,
            String text, AttributeSet attr) throws BadLocationException {

        fb.insertString(offset, text.toUpperCase(), attr);
    }

    public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs) throws BadLocationException {

        fb.replace(offset, length, text.toUpperCase(), attrs);
    }
}
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        //DocumentFilter numericFilter0 = new DocumentFilter(){

            //            @Override
            //            public void insertString(FilterBypass fb, int offset,
                //                    String string, AttributeSet attr)
            //                    throws BadLocationException {
                //                fb.insertString(offset, string.replaceAll("\\s+", " "), attr);
                //            }

            //            @Override
            //            public void replace(FilterBypass fb, int offset, int length,
                //                    String text, AttributeSet attrs)
            //                    throws BadLocationException {

                //                fb.replace(offset, length, text.replaceAll("\\s+", " "), attrs);
                //            }
            //        };
        //((AbstractDocument) jTextField2.getDocument()).setDocumentFilter(numericFilter0);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel19 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        demoDateField1 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jComboBox5 =
        new JComboBox(new Object[] {
            "Nouveau rep. légal",
            new JSeparator(JSeparator.HORIZONTAL),

        }
    );
    jComboBox5.setRenderer(new SeparatorComboBoxRenderer());
    jComboBox4 = new javax.swing.JComboBox();
    jLabel28 = new javax.swing.JLabel();
    jFormattedTextField2 = new javax.swing.JFormattedTextField();
    jLabel29 = new javax.swing.JLabel();
    jPanel5 = new javax.swing.JPanel();
    jLabel18 = new javax.swing.JLabel();
    jLabel17 = new javax.swing.JLabel();
    jToggleButton2 = new javax.swing.JToggleButton();
    jLabel27 = new javax.swing.JLabel();
    jLabel23 = new javax.swing.JLabel();
    jTextField11 = new javax.swing.JTextField();
    jLabel24 = new javax.swing.JLabel();
    jTextField12 = new javax.swing.JTextField();
    jTextField13 = new javax.swing.JTextField();
    jLabel25 = new javax.swing.JLabel();
    jLabel26 = new javax.swing.JLabel();
    jTextField14 = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("INFORMATIONS SUR L'ENFANT"));

    jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField5FocusLost(evt);
        }
    });

    jLabel2.setText("Nom de l'enfant");

    jTextField1.setName(""); // NOI18N
    DocumentFilter filter = new UppercaseDocumentFilter();
    ((AbstractDocument) jTextField1.getDocument()).setDocumentFilter(filter);
    jTextField1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField1ActionPerformed(evt);
        }
    });
    jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField1FocusLost(evt);
        }
    });

    jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField2FocusLost(evt);
        }
    });
    jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jTextField2KeyTyped(evt);
        }
    });

    jLabel3.setText("Prénoms");

    jLabel4.setText("Date de naissance");

    jLabel5.setText("Lieu de naissance");

    jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
    //DocumentFilter numericFilter00 = new DocumentFilter(){
        //Pattern regEx= Pattern.compile("^\\d");
        //                              ^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$
        //    Pattern regEx= Pattern.compile("^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])$");

        //     final int maxCharLength=8;

        //    @Override
        //    public void insertString(FilterBypass fb, int offset,
            //            String string, AttributeSet attr)
        //           throws BadLocationException {
            //       fb.insertString(offset, string.replaceAll("[^\\d]", ""), attr);
            //   }

        //@Override
        //  public void insertString(FilterBypass fb, int offs, String text, AttributeSet a) throws BadLocationException {
            //     if (text == null) {
                //       return;
                // }

            //    if (regEx.matcher(text).matches()) {
                //      super.insertString(fb, offs, text, a);
                //}
            //}

        // @Override
        //  public void replace(FilterBypass fb, int offset, int length,
            //          String text, AttributeSet attrs)
        //         throws BadLocationException {
            //       Matcher matcher = regEx.matcher(text);
            //fb.getDocument().getLength() + text.length()) <= maxCharLength &&
        //         System.out.println("text"+text);
        //        System.out.println("regEx"+regEx);
        //        System.out.println("matching"+matcher.matches());
        //   if ((fb.getDocument().getLength() + text.length()) <= maxCharLength &&  matcher.matches()) {
            //
            //       super.replace(fb, offset, length, text, attrs);
            //  } else {
            //       Toolkit.getDefaultToolkit().beep();
            //   }

        //   fb.replace(offset, length, text.replaceAll("[^\\d]", ""), attrs);
        // }
    // };

    //   public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
    //       throws BadLocationException {

        //   String newStr = fb.getDocument().getText(0, fb.getDocument().getLength()) + string;
        //    Matcher m = regEx.matcher(newStr);
        //   if (m.matches()) {
            //       super.insertString(fb, offset, string, attr);
            //   } else {
            //    }
        //}

    //  public void replace(FilterBypass fb, int offset,
        //                     int length, String string, AttributeSet attr) throws
    //         BadLocationException {

        //     if (length > 0) fb.remove(offset, length);
        //    insertString(fb, offset, string, attr);
        // }
    //};

    //((AbstractDocument) jTextField3.getDocument()).setDocumentFilter(numericFilter00);
    jTextField3.addCaretListener(new javax.swing.event.CaretListener() {
        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            jTextField3CaretUpdate(evt);
        }
    });
    jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField3FocusLost(evt);
        }
    });

    jLabel6.setText("Quartier ");

    jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField4FocusLost(evt);
        }
    });

    jLabel7.setText("Profession");

    jLabel15.setText("Photo");

    jToggleButton1.setText("Choisir la photo");
    jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jToggleButton1ActionPerformed(evt);
        }
    });

    jLabel19.setText("Sexe");

    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculin ", "Féminin" }));

    jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png"))); // NOI18N
    jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    demoDateField1.setYearDigitsAmount(4);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6))
                            .addGap(65, 65, 65)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jLabel19)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addGap(37, 37, 37)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4))
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jToggleButton1)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(demoDateField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addContainerGap(34, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(81, 81, 81)
                    .addComponent(jLabel15))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addComponent(jToggleButton1)))
            .addGap(7, 7, 7)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4)
                .addComponent(demoDateField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(11, 11, 11)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel5)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(33, 33, 33)
                    .addComponent(jLabel7))
                .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 1410, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 575, Short.MAX_VALUE)
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

    jLabel8.setText("Type d'adhesion");

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Epargne", "Tontine", "Epargne et tontine", " " }));
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBox1ActionPerformed(evt);
        }
    });

    jLabel11.setText("Bénéficiaires:");

    jCheckBox3.setText("Parent/Tuteur");
    ButtonGroup bg = new ButtonGroup();
    bg.add(jCheckBox3);
    jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox3ActionPerformed(evt);
        }
    });

    jCheckBox4.setText("Enfant");
    bg.add(jCheckBox4);
    jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox4ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel8)
                .addComponent(jLabel11))
            .addGap(18, 18, 18)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jCheckBox3)
                    .addGap(18, 18, 18)
                    .addComponent(jCheckBox4))
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(71, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel8)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel11)
                .addComponent(jCheckBox3)
                .addComponent(jCheckBox4))
            .addContainerGap(40, Short.MAX_VALUE))
    );

    jButton1.setText("Enregsitrer ");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("REPRESENTANT  LEGAL"));

    jLabel14.setText("Email");

    jLabel13.setText("Téléphone");

    jLabel12.setText("Adresse ");

    jLabel10.setText("Nom");

    jLabel9.setText("type ");

    jCheckBox1.setText("Parent");
    ButtonGroup bg2 = new ButtonGroup();
    bg2.add(jCheckBox1);
    jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox1ActionPerformed(evt);
        }
    });

    jCheckBox2.setText("Tuteur");
    bg2.add(jCheckBox2);
    jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jCheckBox2ActionPerformed(evt);
        }
    });

    DocumentFilter filter2 = new UppercaseDocumentFilter();
    ((AbstractDocument) jTextField6.getDocument()).setDocumentFilter(filter2);
    jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField6FocusLost(evt);
        }
    });

    jLabel1.setText("Prénoms");

    jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField7FocusLost(evt);
        }
    });
    jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jTextField7KeyTyped(evt);
        }
    });

    jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jTextField8FocusLost(evt);
        }
    });

    jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jTextField10KeyTyped(evt);
        }
    });

    jLabel20.setText("Sexe");

    jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculin\t", "Féminin" }));

    jLabel22.setText("rep. légal ");

    ResultSet rst=null;
    String sql="SELECT * FROM representant_legal ORDER BY TRIM(Nom) ASC , TRIM(Prenom) ASC;";
    connect=Connect.ConnectDb();
    Statement stmt = null;
    try {
        stmt= connect.createStatement();
        rst=stmt.executeQuery(sql);
        while(rst.next()) {
            jComboBox5.addItem(rst.getString(3)+", "+rst.getString(4));
        }

    } catch (SQLException ex) {
        Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
    }
    jComboBox5.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            Adhesion_enfant.this.itemStateChanged(evt);
        }
    });

    jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "national", "international" }));
    jComboBox4.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBox4ItemStateChanged(evt);
        }
    });

    jLabel28.setText("");

    try {
        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##")));
    } catch (java.text.ParseException ex) {
        ex.printStackTrace();
    }
    jFormattedTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFormattedTextField2FocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFormattedTextField2FocusLost(evt);
        }
    });

    jLabel29.setText("");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel9)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(jLabel1)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22)
                        .addComponent(jLabel13)
                        .addComponent(jLabel14)
                        .addComponent(jLabel20))
                    .addGap(66, 66, 66)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel21)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1))
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(43, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel9)
                .addComponent(jCheckBox1)
                .addComponent(jCheckBox2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel22)
                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel12)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(6, 6, 6)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel21)
                    .addGap(41, 41, 41)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jLabel13)
                            .addGap(12, 12, 12))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(59, 59, 59))))
    );

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("REPRESENTANT LEGAL SUITE"));

    jLabel18.setText("Photo");

    jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png"))); // NOI18N
    jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    jToggleButton2.setText("Choisir la photo");
    jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jToggleButton2ActionPerformed(evt);
        }
    });

    jLabel27.setText("Versements initiaux");

    jLabel23.setText("Droit d'adhésion");

    DocumentListener documentListener = new DocumentListener() {

        @Override
        public void removeUpdate(DocumentEvent e) {
            performSummation(null);
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            performSummation(null);
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
    };

    DocumentFilter numericFilter = new DocumentFilter(){

        @Override
        public void insertString(FilterBypass fb, int offset,
            String string, AttributeSet attr)
        throws BadLocationException {
            fb.insertString(offset, string.replaceAll("[^\\d]", ""), attr);
        }

        @Override
        public void replace(FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs)
        throws BadLocationException {

            fb.replace(offset, length, text.replaceAll("[^\\d]", ""), attrs);
        }
    };
    ((AbstractDocument) jTextField11.getDocument()).setDocumentFilter(numericFilter);
    ((AbstractDocument) jTextField12.getDocument()).setDocumentFilter(numericFilter);
    ((AbstractDocument) jTextField13.getDocument()).setDocumentFilter(numericFilter);
    ((AbstractDocument) jTextField14.getDocument()).setDocumentFilter(numericFilter);
    jTextField11.getDocument().addDocumentListener(documentListener);
    jTextField12.getDocument().addDocumentListener(documentListener);
    jTextField13.getDocument().addDocumentListener(documentListener);
    jTextField11.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField11ActionPerformed(evt);
        }
    });

    jLabel24.setText("Part sociale");

    jTextField12.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField12ActionPerformed(evt);
        }
    });

    jTextField13.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField13ActionPerformed(evt);
        }
    });

    jLabel25.setText("Dépôt");

    jLabel26.setText("TOTAL ");

    jTextField14.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField14ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addComponent(jLabel18)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jLabel27)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel23)
                        .addComponent(jLabel24)
                        .addComponent(jLabel25)
                        .addComponent(jLabel26))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextField13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addComponent(jTextField12, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField11, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField14))))
            .addContainerGap(88, Short.MAX_VALUE))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(67, 67, 67)
                    .addComponent(jLabel18))
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jToggleButton2)))
            .addGap(18, 18, 18)
            .addComponent(jLabel27)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel23)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel24)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel25))
            .addGap(18, 18, 18)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(72, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(128, 128, 128)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents
    private static boolean isAllUpper(String s){
        for(char c:s.toCharArray()){
            if(Character.isLetter(c) && Character.isLowerCase(c)){
                return false;
          }
        }
        return true;
    }
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

     private static boolean isDouble(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch (NumberFormatException e){
            return false;
        }
    }
    
     private void performSummation(java.awt.event.ActionEvent evt) {
        int total = 0;
        if(jTextField11.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField11.getText());
            }catch(NumberFormatException nbx){
            }
        }

        if(jTextField12.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField12.getText());
            }catch(NumberFormatException nbx){
            }
        }
        
        if(jTextField13.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField13.getText());
            }catch(NumberFormatException nbx){
            }
        }

       

        jTextField14.setText(""+total);

    }
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
       
         JFileChooser chooser = new JFileChooser();
                int returnVal = chooser.showOpenDialog(null);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    enfant_photourl=chooser.getSelectedFile().getAbsolutePath();
                    System.out.println(chooser.getSelectedFile().getAbsolutePath());
                }
                
                if (enfant_photourl!= null && !enfant_photourl.equals("")) {
            try {
                Image temp = new ImageIcon(enfant_photourl).getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
                jLabel16.setIcon(new ImageIcon(temp));
                //JLabel picture = new JLabel(new ImageIcon(temp));
                //jLabel1.setBounds(250, 20, 180, 180);
                //jPanel1.add(picture);
                System.out.println(enfant_photourl);
            } catch (Exception e) {
            }
        } else {
            try {
                Image temp = new ImageIcon(
                        getClass().getResource("blank.png")).getImage().getScaledInstance(180, 180,
                        Image.SCALE_SMOOTH);
                //JLabel picture = new JLabel(new ImageIcon(temp));
                  jLabel16.setIcon(new ImageIcon(temp));
                  enfant_photourl= getClass().getResource("blank.png").getPath();
               // jLabel5.setBounds(250, 20, 180, 180);
               // jPanel1.add(picture);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         Emailvalidator emailValidator = new Emailvalidator();
          if(jTextField1.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Nom");
        } else if (! isAllUpper(jTextField1.getText())) {
            JOptionPane.showMessageDialog(this, "Nom tout en majuscules");
        } else if(jTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ prénom");
//        } else if(jFormattedTextField1.getText().equalsIgnoreCase("dd/MM/yyyy")){
//             JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ date de naissance");
//        } else if(!jFormattedTextField1.isValid()) {
        } else if (demoDateField1.getDate()==null){   
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ date de naissance au format dd/MM/yyyy");
        } else if (jTextField3.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ lieu de naissance"); 
        } else if (jTextField4.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le quartier");
//        }else if (jTextField5.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner la profession");
        } else if (jTextField6.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le nom du représentant légal");
        } else if (! isAllUpper(jTextField6.getText())){
            JOptionPane.showMessageDialog(this, "nom du représentant légal tout en majuscules");
        }  else if (jTextField7.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le prénom du représentant légal");
        }  else if (jTextField8.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner l'adresse du représentant légal");
//        } else if (jFormattedTextField2.getText().equalsIgnoreCase("(+IND-)NN-NN-NN-NN")){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner le téléphone du représentant légal");
//        } else if (jTextField10.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner l'email du représentant légal");
        } else if (jFormattedTextField2.getText().equalsIgnoreCase("  -  -  -  ") || jFormattedTextField2.getText().equalsIgnoreCase("+") ){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Téléphone");
        
        
        } else if (!emailValidator.validate(jTextField10.getText())){
            JOptionPane.showMessageDialog(this, "Email invalide");
        }else if (! jCheckBox3.isSelected() && ! jCheckBox4.isSelected()){
            JOptionPane.showMessageDialog(this, "Veuillez choisir le bénéficiaire");

        } else if (! jCheckBox1.isSelected() && ! jCheckBox2.isSelected()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le satut du représentant légal (parent ou tuteur)");

        } else if (jTextField11.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Veuillez renseigner les droits d'adhésion");  
            
        }else if (jTextField12.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Veuillez renseigner la part d'adhésion");
//           } else if () else if (jTextField13.getText().isEmpty()) {
//           JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Dépôt");
        
        }else {   
           
            ResultSet rs=null;
            ResultSet rs2=null;
            int id;
            String beneficiaire= "enfant";
            String type_representant="tuteur";
            boolean success= true;
          //  Date datenais = null;
            java.sql.Date sqlDate=new java.sql.Date(demoDateField1.getDate().getTime());
           // String datenaiss=jFormattedTextField1.getText();
            if (jCheckBox3.isSelected()){
                beneficiaire="parent/tuteur";
            }
            if (jCheckBox1.isSelected()){
                type_representant="parent";
            }
//             DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
//            try {
//                datenais= formatter.parse(datenaiss);
//                sqlDate= new java.sql.Date(datenais.getTime());
//            } catch (ParseException ex) {
//                Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
//            }
             
            // Vérifier si le représentant légal est dans la base de données et obtenir son id 
            String sql0="SELECT id_representant_legal FROM representant_legal WHERE Nom= '" + jTextField6.getText() + "' AND lower(Prenom)= '"+jTextField7.getText().toLowerCase(Locale.FRENCH)+ "'";
            String sql01="SELECT idProfil_enfant FROM Profil_enfant WHERE Nom= '" + jTextField1.getText() + "' AND lower(Prenoms)= '"+jTextField2.getText().toLowerCase(Locale.FRENCH)+ "'";
            connect=Connect.ConnectDb();
            Statement stmt = null;
              try {
                  stmt= connect.createStatement();
                   rs=stmt.executeQuery(sql0);
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              stmt = null;
              
              try {
                   stmt= connect.createStatement();
                   rs2=stmt.executeQuery(sql01);
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              
              try {
                  if (rs.next() && jComboBox5.getSelectedIndex()==0){
                       // id = rs.getInt("id_representant_legal");
                        JOptionPane.showMessageDialog(null, "Attention le représentant légal indiqué est déjà enregistré. Veuillez le sélectionner dans la liste déroulante");
//                        String sql2 = "INSERT INTO Profil_enfant " + 
//                     "VALUES ("+ null +", '"+ jTextField1.getText()+ "', '"+ jTextField2.getText() +"', '"+ enfant_photourl+
//                     "', '"+sqlDate+"', '"+jTextField3.getText()+"', '"+jTextField4.getText()+"', '"+jTextField5.getText()+ "', '"+String.valueOf(jComboBox1.getSelectedItem()).trim()+
//                     "', '"+beneficiaire+ "','"+id+"', '"+String.valueOf(jComboBox2.getSelectedItem()).trim()+"');";
//                       System.out.println(sql2);
//                       pst=connect.prepareStatement(sql2);
//                       pst.execute();
                         success=false;
                  }else if (rs2.next() ){
                      JOptionPane.showMessageDialog(null, "Attention l'enfant indiqué est déjà enregistré");
                         success=false;
                  }else {
                       if(jComboBox5.getSelectedIndex()==0){
                       System.out.println(jTextField8.getText());
                       String sql1 = "INSERT INTO representant_legal " + 
                      "VALUES ("+ null +", '"+ type_representant+ "', '"+ jTextField6.getText() +"', '"+ jTextField7.getText() +
                      "', '"+jTextField8.getText()+"', '"+jFormattedTextField2.getText()+"', '"+jTextField10.getText()+"', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+ "', '"+replegal_photourl+
                      "');";
                       System.out.println("Photourl" +replegal_photourl);
                       pst=connect.prepareStatement(sql1, Statement.RETURN_GENERATED_KEYS);
                       pst.execute();
                       ResultSet rst= pst.getGeneratedKeys();
                       int generatedkey=0;
                       if(rst.next()){
                           generatedkey= rst.getInt(1);
                       }
                       System.out.println("generated key" + generatedkey);
                       String sql2 = "INSERT INTO Profil_enfant " + 
                      "VALUES ("+ null +", '"+ jTextField1.getText()+ "', '"+ jTextField2.getText() +"', '"+ enfant_photourl+
                       "', '"+sqlDate+"', '"+jTextField3.getText()+"', '"+jTextField4.getText()+"', '"+jTextField5.getText()+ "', '"+String.valueOf(jComboBox1.getSelectedItem()).trim()+
                       "', '"+beneficiaire+ "','"+generatedkey+"', '"+String.valueOf(jComboBox2.getSelectedItem()).trim()+"');";
                       System.out.println(sql2);
                       pst=connect.prepareStatement(sql2);
                       pst.execute();
                       int i;
                       int count =jComboBox5.getItemCount();
                       for (i=2; i<count; i++) {
                            System.out.println( "c'est ici"+(String)jComboBox5.getItemAt(i) +count);
                           jComboBox5.removeItemAt(2);
                         
                       }
                       
                       
                 
                 
                       ResultSet rst3=null;
                       String sql="SELECT * FROM representant_legal ORDER BY TRIM(Nom) ASC , TRIM(Prenom) ASC;";
                       Statement stmt3 = null;
                       try {
                            stmt3= connect.createStatement();
                            rst3=stmt3.executeQuery(sql);
                            while(rst3.next()) {
                                 jComboBox5.addItem(rst3.getString(3)+", "+rst3.getString(4));
                             }
                           
                       } catch (SQLException ex) {
                        Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
                       }
                       
                         
                        }else {   
                           int generated=0;
                           String sql4="SELECT id_representant_legal FROM representant_legal WHERE Nom= '" + jTextField6.getText() + "' AND lower(Prenom)= '"+jTextField7.getText().toLowerCase(Locale.FRENCH)+ "'";
                           connect=Connect.ConnectDb();
                           Statement stmt2 = null;
                           try {
                              stmt2= connect.createStatement();
                              rs=stmt2.executeQuery(sql4);
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
                           } catch (SQLException ex) {
                             Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
                           }
                           if(rs.next()){
                           generated= rs.getInt(1);
                           
                            String sql2 = "INSERT INTO Profil_enfant " + 
                     "VALUES ("+ null +", '"+ jTextField1.getText()+ "', '"+ jTextField2.getText() +"', '"+ enfant_photourl+
                     "', '"+sqlDate+"', '"+jTextField3.getText()+"', '"+jTextField4.getText()+"', '"+jTextField5.getText()+ "', '"+String.valueOf(jComboBox1.getSelectedItem()).trim()+
                     "', '"+beneficiaire+ "','"+generated+"', '"+String.valueOf(jComboBox2.getSelectedItem()).trim()+"');";
                       pst=connect.prepareStatement(sql2);
                       pst.execute();
                           }else {
                               success=false;
                                JOptionPane.showMessageDialog(null, "Enregistrement impossible");
                           }}} 
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
                  success= false;
              }
              
              
              if (success){
                  JOptionPane.showMessageDialog(null, "Enregistrement effectué avec succès");
                  jTextField1.setText("");
                  jTextField2.setText("");
                  jTextField3.setText("");
                  jTextField4.setText("");
                  demoDateField1.setDate(null);
//                  jFormattedTextField1.setText("dd/MM/yyyy");
                  jTextField5.setText("");
                  jTextField6.setText("");
                  jTextField7.setText("");
                  jTextField8.setText("");
              //    jFormattedTextField2.setText("(+IND-)NN-NN-NN-NN");
                  jFormattedTextField2.setText("");
                  
                  jTextField10.setText("");
                   jTextField11.setText("");
                   jTextField12.setText("");
                   jTextField13.setText("");
                   jTextField14.setText("");
                   jLabel16.setIcon(new ImageIcon(new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH)));
                   jLabel17.setIcon(new ImageIcon(new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH)));
                  //jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png")));
                  //jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png")));
                  jComboBox5.setSelectedIndex(0);
                  this.main.refresh();
           }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            replegal_photourl=chooser.getSelectedFile().getAbsolutePath();
            System.out.println("choix"+chooser.getSelectedFile().getAbsolutePath());
        }
         System.out.println("choix"+replegal_photourl);
        if (replegal_photourl!= null && !replegal_photourl.equals("")) {
            try {
                Image temp = new ImageIcon(replegal_photourl).getImage().getScaledInstance(90, 90, Image.SCALE_SMOOTH);
                jLabel17.setIcon(new ImageIcon(temp));
                //JLabel picture = new JLabel(new ImageIcon(temp));
                //jLabel1.setBounds(250, 20, 180, 180);
                //jPanel1.add(picture);
                System.out.println(replegal_photourl);
            } catch (Exception e) {
            }
        } else {
            try {
                Image temp = new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH);
                replegal_photourl= getClass().getResource("blank.png").getPath();
                System.out.println("Il est entré ici et vaut"+replegal_photourl);
                //JLabel picture = new JLabel(new ImageIcon(temp));
                jLabel17.setIcon(new ImageIcon(temp));
                // jLabel5.setBounds(250, 20, 180, 180);
                // jPanel1.add(picture);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void itemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange()== ItemEvent.SELECTED){
            jLabel29.setText("");
        if (jComboBox5.getSelectedIndex()==0){
            jTextField6.setText("");
            jTextField7.setText("");
            jTextField8.setText("");
           // jFormattedTextField2.setText("(+IND-)NN-NN-NN-NN");
             jFormattedTextField2.setText("");
            jTextField10.setText("");
            jComboBox3.setSelectedIndex(0);
            jCheckBox1.setSelected(true);
            Image temp = new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(100, 100,
                    Image.SCALE_SMOOTH);
                //JLabel picture = new JLabel(new ImageIcon(temp));
            jLabel17.setIcon(new ImageIcon(temp));
            

            
            
        } else {
        String nom =((String) jComboBox5.getSelectedItem()).split(", ")[0];
        String prenom =((String) jComboBox5.getSelectedItem()).split(", ")[1];
        jTextField6.setText(nom);
        jTextField7.setText(prenom);
        ResultSet rst=null;
         String sql0="SELECT * FROM representant_legal WHERE Nom= '" + nom + "' AND lower(Prenom)= '"+prenom.toLowerCase(Locale.FRENCH)+ "'";
          connect=Connect.ConnectDb();
            Statement stmt = null;
              try {
                  stmt= connect.createStatement();
                   rst=stmt.executeQuery(sql0);
                   int i=0;
                   while(rst.next()) {
                       if (rst.getString(2).equalsIgnoreCase("parent")) {
                           jCheckBox1.setSelected(true);
                       } else {
                           jCheckBox2.setSelected(true);
                       }
               
                       jTextField8.setText(rst.getString(5));
                       if(rst.getString(6).startsWith("+")){
                           jComboBox4.setSelectedIndex(1);
                       } else {
                           jComboBox4.setSelectedIndex(0);
                       }
                       jFormattedTextField2.setText(rst.getString(6));
                       jTextField10.setText(rst.getString(7));
                       if (rst.getString(8).trim().equalsIgnoreCase("masculin")) {
                            System.out.println(i+" "+rst.getString(8)+",");
                           jComboBox3.setSelectedIndex(0);
                       } else {
                      //     System.out.println("false");
                      //     System.out.println(i+" "+rst.getString(8)+",");
                           jComboBox3.setSelectedIndex(1);
                       }
                       try {
                            Image temp = new ImageIcon(rst.getString(9)).getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
                            jLabel17.setIcon(new ImageIcon(temp));
                            //JLabel picture = new JLabel(new ImageIcon(temp));
                            //jLabel1.setBounds(250, 20, 180, 180);
                           //jPanel1.add(picture);
                
                       } catch (Exception e) {
                       }
                       i++;
        }
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              
              
        
       
        }
    }//GEN-LAST:event_itemStateChanged
    }
    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
         if (!(Character.isAlphabetic(evt.getKeyChar()) || evt.getKeyChar() == '-' ) && !Character.isSpaceChar(evt.getKeyChar())) {
        evt.consume();
    } else if (jTextField2.getText().trim().length() == 0 ) {            //&& Character.isLowerCase(evt.getKeyChar())
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else if(jTextField2.getText().endsWith(" ") ){
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else{
         evt.setKeyChar(Character.toLowerCase(evt.getKeyChar()));
    }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        // TODO add your handling code here:
        jTextField2.setText(jTextField2.getText().trim());
        jTextField2.setText(jTextField2.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField2FocusLost

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        jTextField1.setText(jTextField1.getText().trim());
        jTextField1.setText(jTextField1.getText().replaceAll("\\s+", " "));
        
        //
//        String s = "+22822-50-87-31";
//PhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();
//Phonenumber.PhoneNumber phoneNumber;
//        try {
//            phoneNumber = phoneUtil.parse(s, "");
//            System.out.println(phoneUtil.isValidNumber(phoneNumber));
//            System.out.println(jFormattedTextField2.getText());
//            String formatted = phoneUtil.format(phoneNumber, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
//            System.out.println(formatted);
//        } catch (NumberParseException ex) {
//            Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // TODO add your handling code here:
         if (!Character.isAlphabetic(evt.getKeyChar()) && !Character.isSpaceChar(evt.getKeyChar())) {
        evt.consume();
    } else if (jTextField7.getText().trim().length() == 0 ) {            //&& Character.isLowerCase(evt.getKeyChar())
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else if(jTextField7.getText().endsWith(" ") ){
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else{
         evt.setKeyChar(Character.toLowerCase(evt.getKeyChar()));
    }
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jTextField7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusLost
        // TODO add your handling code here:
        jTextField7.setText(jTextField7.getText().trim());
        jTextField7.setText(jTextField7.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField7FocusLost

    private void jTextField6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusLost
        // TODO add your handling code here:
        jTextField6.setText(jTextField6.getText().trim());
        jTextField6.setText(jTextField6.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField6FocusLost

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        // TODO add your handling code here:
        jTextField3.setText(jTextField3.getText().trim());
        jTextField3.setText(jTextField3.getText().replaceAll("\\s+", " "));
        jTextField3.setText(WordUtils.capitalizeFully(jTextField3.getText()));
        
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        // TODO add your handling code here:
        jTextField4.setText(jTextField4.getText().trim());
        jTextField4.setText(jTextField4.getText().replaceAll("\\s+", " "));
        jTextField4.setText(WordUtils.capitalizeFully(jTextField4.getText()));
    }//GEN-LAST:event_jTextField4FocusLost

    private void jTextField5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusLost
        // TODO add your handling code here:
        jTextField5.setText(jTextField5.getText().trim());
        jTextField5.setText(jTextField5.getText().replaceAll("\\s+", " "));
        jTextField5.setText(WordUtils.capitalizeFully(jTextField5.getText()));
    }//GEN-LAST:event_jTextField5FocusLost

    private void jTextField10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyTyped
        // TODO add your handling code here:
        jTextField10.setText(jTextField10.getText().trim());
    }//GEN-LAST:event_jTextField10KeyTyped

    private void jTextField3CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField3CaretUpdate
//        // TODO add your handling code here:
//     String text = jTextField3.getText();
//    if(text != null) {
//        if(!text.matches("^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$")) {
//            SwingUtilities.invokeLater(new Runnable() {
//          public void run() {
//             jTextField3.setText(" "); 
//          }});                
//        
//    }
//    }

    }//GEN-LAST:event_jTextField3CaretUpdate

    private void jComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox4ItemStateChanged
        // TODO add your handling code here:
        System.out.println("evt"+evt.getID());
        if (jComboBox4.getSelectedIndex()==0){
             try {
                 System.out.println(jFormattedTextField2.getDocument());
          jFormattedTextField2.setDocument(new javax.swing.text.PlainDocument());       
        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##")));
                } catch (java.text.ParseException ex) {
                 ex.printStackTrace();
                
         }
        }else {
       
          //  try {
              // MaskFormatter form1= new javax.swing.text.MaskFormatter("+#####");
             //  form1.setAllowsInvalid(false);
              //  AbstractFormatterFactory form= new javax.swing.text.DefaultFormatterFactory(form1);
                
              //  jFormattedTextField2.setFormatterFactory(form);
                
          //  } catch (ParseException ex) {
          //      Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
          //  }
          System.out.println(jFormattedTextField2.getDocument());
           jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory());  
          
           jFormattedTextField2.setDocument(new PhoneDocument());
            jFormattedTextField2.setText("+");
//             ((AbstractDocument) jFormattedTextField2.getDocument()).setDocumentFilter(new DocumentFilter() {
//            @Override
//            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
//                if (offset < 1) {
//                    return;
//                }
//                super.insertString(fb, offset, string, attr);
//            }
//
//            @Override
//            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
//                if (offset < 1) {
//                    length = Math.max(0, length - 1);
//                    offset = 1;
//                }
//                super.replace(fb, offset, length, text, attrs);
//            }
//
//            @Override
//            public void remove(FilterBypass fb, int offset, int length) throws BadLocationException {
//                if (offset < 1) {
//                    length = Math.max(0, length + offset - 1);
//                    offset = 1;
//                }
//                if (length > 0) {
//                    super.remove(fb, offset, length);
//                }
//            }
//        });
            
        }
    }//GEN-LAST:event_jComboBox4ItemStateChanged

    private void jFormattedTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField2FocusLost
        // TODO add your handling code here:
        if (jComboBox4.getSelectedIndex()==1){  //international
            PhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();
            Phonenumber.PhoneNumber phoneNumber;
        try {
            phoneNumber = phoneUtil.parse(jFormattedTextField2.getText(), "");
            if (!phoneUtil.isValidNumber(phoneNumber)){
                jLabel29.setText("Le numéro n'est pas valide");
                jLabel29.setForeground(Color.red);                                             // set color to red 
            }
            
            String formatted = phoneUtil.format(phoneNumber, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
            jFormattedTextField2.setDocument(new javax.swing.text.PlainDocument());
            jFormattedTextField2.setText(formatted);
        } catch (NumberParseException ex) {
            jLabel29.setText("Le numéro n'est pas valide");
            jLabel29.setForeground(Color.red); 
            Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
        }

            
        }
    }//GEN-LAST:event_jFormattedTextField2FocusLost

    private void jFormattedTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField2FocusGained
        // TODO add your handling code here:
        jLabel29.setText("");
        
        if (jComboBox4.getSelectedIndex()==1) {
           
              
             if (jFormattedTextField2.getText().equalsIgnoreCase("+")){
                  System.out.println("trueequal");
                    jFormattedTextField2.setDocument(new PhoneDocument());
                  jFormattedTextField2.setText("+");
             } else {
                 String before =jFormattedTextField2.getText();
                 before=before.replaceAll("\\s", "");
                 jFormattedTextField2.setText(before);
                 
             }
        }
    }//GEN-LAST:event_jFormattedTextField2FocusGained

    private void jTextField8FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusLost
        // TODO add your handling code here:
        jTextField8.setText(jTextField8.getText().trim());
        jTextField8.setText(jTextField8.getText().replaceAll("\\s+", " "));
        jTextField8.setText(WordUtils.capitalizeFully(jTextField8.getText()));
    }//GEN-LAST:event_jTextField8FocusLost

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Adhesion_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Adhesion_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Adhesion_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Adhesion_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Adhesion_enfant(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
