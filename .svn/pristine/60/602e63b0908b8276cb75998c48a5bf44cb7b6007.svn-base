/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nehemie_mutuelle;

import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author elommarcarnold
 */
public class Authframe extends javax.swing.JFrame {

    private Connection conn;
      private Vector<Vector<Object>> data;

    /**
     * Creates new form Authframe
     */
    public Authframe() {
        initComponents();
    }
    
    
    class PasswordCellRenderer extends DefaultTableCellRenderer {
        private static final String ASTERISKS="**************";
        
        public Component getTableCellRendererComponent(JTable arg0, Object arg1, boolean arg2, boolean arg3, int arg4, int arg5) {
            int length=0;
            if(arg1 instanceof String) {
                length= ((String) arg1).length();
                
            } else if (arg1 instanceof char[]) {
                length= ((char[]) arg1).length;     
            } 
          
            setText(asterisks(length));
            return this;        
        }
        private String asterisks(int length) {
             if (length > ASTERISKS.length()) {
                 StringBuilder sb = new StringBuilder(length);
                 for (int i=0; i<length;i++) {
                     sb.append('*');
                 }
                 return sb.toString();
                 
             } else {
                      return ASTERISKS.substring(0, length);
                         }
                 }
             }
        
        
        
     
    public Vector getLoggers() throws Exception {
        conn = Connect.ConnectDb();
        PreparedStatement pre;
        pre = conn.prepareStatement("SELECT * FROM Login");
        ResultSet rs = pre.executeQuery();
      //  int i = 1;
        Vector<Vector> membreVector = new Vector<Vector>();
        while (rs.next()) {
            Vector<Object> membre = new Vector<Object>();
           // membre.add(i);
            membre.add(rs.getString("Nom"));
            membre.add(rs.getString("Prenom"));
            membre.add(rs.getString("Username"));
            Random rand=new Random();
            final int max=8;
            final int min=6;
            membre.add(String.format("%1$"+(rand.nextInt((max-min)+1)+min)+"s","test"));
            //
            membreVector.add(membre);
            //i++;
        }

        /*Close the connection after use (MUST)*/
        if (conn != null) {
            conn.close();
        }
        if (pre != null) {
            pre.close();
        }
        if (rs != null) {
            rs.close();
        }
        return membreVector;
    }
    
    
    public static Object[][] to2DimArray(Vector v) {
        Object[][] out = new Object[v.size()][0];
        for (int i = 0; i < out.length; i++) {
            out[i] = ((Vector) v.get(i)).toArray();
        }
        return out;
    } 
    
    
    
    
    
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        try {
            // TODO add your handling code here:
            data=getLoggers();
        } catch (Exception ex) {
            Logger.getLogger(Authframe
                .class.getName()).log(Level.SEVERE, null, ex);
        }
        Object[][] out = to2DimArray(data);

        //jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        //jTable4.setFillsViewportHeight(true);

        //sorter = new TableRowSorter<DefaultTableModel>((DefaultTableModel)jTable4.getModel());
        //jTable4.setRowSorter(sorter);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            out,
            new String [] {
                "Noms", "Pr√©noms", "Identifiant", "Mot de passe"
            }
        )
        {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            Class[] types = {String.class, String.class, String.class,
                String.class};

            @Override
            public Class getColumnClass(int columnIndex) {
                return this.types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }}
        );
        jTable1.getColumn ("Mot de passe").setCellRenderer(new PasswordCellRenderer());
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/find-16x16.png"))); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 792, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 380, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30))
            .add(layout.createSequentialGroup()
                .add(133, 133, 133)
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
