/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nehemie_mutuelle;

import com.l2fprod.gui.plaf.skin.Skin;
import com.l2fprod.gui.plaf.skin.SkinLookAndFeel;
import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.HierarchyBoundsAdapter;
import java.awt.event.HierarchyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.plaf.metal.MetalTheme;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import nehemie_mutuelle.JSearchTextField;
import nehemie_mutuelle.JIconTextField;

/**
 *
 * @author elommarcarnold
 */
public class main extends javax.swing.JFrame implements ActionListener{
    static PreparedStatement pre =null;
    static Connection conn=null;
    private Vector<Vector<String>> data;
    private JPopupMenu popupMenu;
    private JMenuItem menuItemEpargnes;
    private JMenuItem menuItemRetraits;
    private JMenuItem menuItemTontine;
    private JMenuItem menuItemMouvements;
    private JMenuItem menuItemModification;
    private JLabel leftLabel2;
    protected TimerThread timerThread;
    private static ArrayList listphoto;
    private static String urlthe;
    DefaultTableCellRenderer rigren;
    DefaultTableCellRenderer rigren2;
            
    Vector<String> header = new Vector<String>();
    
        
        

    /**
     * Creates new form main
     */
    public main() {
        //popup menu 
        rigren = new DefaultTableCellRenderer();
        rigren2 = new DefaultTableCellRenderer();

        initComponents();
      
        this.setLocationRelativeTo(null);
  //      this.setExtendedState(JFrame.MAXIMIZED_BOTH);
     
        originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
        addDocumentListener();
        jTextField1.getDocument().addDocumentListener(documentListener);
        

        
    }

    private static class backImage extends JComponent {
 
Image i;
 
//Creating Constructer
public backImage(Image i) {
this.i = i;
 
}
 
//Overriding the paintComponent method
@Override
public void paintComponent(Graphics g) {
 
g.drawImage(i, 0, 0, null);  // Drawing image using drawImage method
 
}
}
 
    
    
    
//    public void resizeColumnWidth() {
//    int cumulativeActual = 0;
//    int padding = 15;
//    for (int columnIndex = 0; columnIndex < jTable1.getColumnCount(); columnIndex++) {
//        int width = 50; // Min width
//        TableColumn column = jTable1.getColumnModel().getColumn(columnIndex);
//        for (int row = 0; row < jTable1.getRowCount(); row++) {
//            TableCellRenderer renderer = jTable1.getCellRenderer(row, columnIndex);
//            Component comp = jTable1.prepareRenderer(renderer, row, columnIndex);
//            width = Math.max(comp.getPreferredSize().width + padding, width);
//        }
//        if (columnIndex < jTable1.getColumnCount() - 1) {
//            column.setPreferredWidth(width);
//            cumulativeActual += column.getWidth();
//        } else { //LAST COLUMN
//            //Use the parent's (viewPort) width and subtract the previous columbs actual widths.
//            column.setPreferredWidth((int) jTable1.getParent().getSize().getWidth() - cumulativeActual);
//        }
//    }
//}
    
    public class MyNewCellRenderer extends DefaultTableCellRenderer {
     
        @Override
        public Component getTableCellRendererComponent(JTable table,Object value, boolean isSelected, boolean hasFocus, int row, int column) {
             
            Component cell= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
             if(row % 2 == 0)
        {
            setForeground(Color.black);        
            setBackground(new Color(208,213,253));            
        }    
        else
        {    
            setBackground(Color.white);    
            setForeground(Color.black);    
        } 
            
             
//            for(int i=1;i<table.getColumnCount();i++) {
//            if((Integer)table.getValueAt(row, i) < 40)  
//            {  
//                setForeground(Color.black);          
//                setBackground(Color.red);              
//            }      
//            else 
//            {      
//                setBackground(Color.white);      
//                setForeground(Color.black);      
//            }   
//             
//           
//        }
             return cell;
          }
 
}
    
    public String getSearchText(){
        return jTextField1.getText();
    }
    
    public class TimerThread extends Thread {
 
        protected boolean isRunning;
 
        protected JLabel dateLabel;
        protected JLabel timeLabel;
 
        protected SimpleDateFormat dateFormat = 
                new SimpleDateFormat("EEE, d MMM yyyy");
        protected SimpleDateFormat timeFormat =
                new SimpleDateFormat("h:mm a");
 
        public TimerThread(JLabel dateLabel, JLabel timeLabel) {
            this.dateLabel = dateLabel;
            this.timeLabel = timeLabel;
            this.isRunning = true;
        }
 
        @Override
        public void run() {
            while (isRunning) {
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        Calendar currentCalendar = 
                            Calendar.getInstance();
                        Date currentTime = 
                            currentCalendar.getTime();
                        dateLabel.setText(dateFormat
                            .format(currentTime));
                        timeLabel.setText(timeFormat
                            .format(currentTime));
                    }
                });
 
                try {
                    Thread.sleep(5000L);
                } catch (InterruptedException e) {
                }
            }
        }
 
        public void setRunning(boolean isRunning) {
            this.isRunning = isRunning;
        }
 
    }
 
    public void searchTableContents(String searchString) {
   
    DefaultTableModel currtableModel = (DefaultTableModel) jTable1.getModel();
    //To empty the table before search
    currtableModel.setRowCount(0);
    //To search for contents from original table content
    for (Object rows : originalTableModel) {
        Vector rowVector = (Vector) rows;
        for (Object column : rowVector) {
            if (column.toString().contains(searchString)) {
                //content found so adding to table
                currtableModel.addRow(rowVector);
                break;
            }
        }
}
}
    
    private void addDocumentListener() {
    documentListener = new DocumentListener() {
        public void changedUpdate(DocumentEvent documentEvent) {
           
            search();
        }

        public void insertUpdate(DocumentEvent documentEvent) {
           
            search();
        }

        public void removeUpdate(DocumentEvent documentEvent) {
            
            search();
        }

        private void search() {
            
            searchTableContents(jTextField1.getText());
        }
    };
 //   searchOnType.setSelected(true);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        header.add("ID");
        header.add("Nom");
        header.add("Prénom");
        header.add("Type_adhésion");
        header.add("Part Sociale");
        try {
            // TODO add your handling code here:
            data=getMembres();
        } catch (Exception ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
        //jTable1.setModel(new javax.swing.table.DefaultTableModel(
            //            data,header
            //        ));
    System.out.println(data);

    // new javax.swing.table.DefaultTableModel(
        //    data,header
        try {
            jTextField1 = new JSearchTextField();
            jLabel3 = new javax.swing.JLabel();
            jPanel5 = new javax.swing.JPanel();
            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            jButton10 = new javax.swing.JButton();
            jSeparator1 = new javax.swing.JSeparator(SwingConstants.VERTICAL);
            jToolBar1 = new javax.swing.JToolBar();
            jStatusBar1 = new nehemie_mutuelle.JStatusBar();
            jLabel4 = new javax.swing.JLabel();
            jMenuBar1 = new javax.swing.JMenuBar();
            jMenu5 = new javax.swing.JMenu();
            jMenu6 = new javax.swing.JMenu();

            jMenu3.setText("jMenu3");

            jMenu4.setText("jMenu4");

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Adhésions")));

            jButton1.setText("Enfant");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setText("Adulte");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            jButton3.setText("Personne Morale");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jButton3))
                    .addGap(0, 68, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3))
            );

            jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Crédits"));

            jButton5.setText("Gérer les crédits");

            jButton6.setText("Remboursements");

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton5)
                        .addComponent(jButton6))
                    .addGap(0, 64, Short.MAX_VALUE))
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jButton5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton6)
                    .addGap(0, 13, Short.MAX_VALUE))
            );

            jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Epargnes & tontines"));

            jButton8.setText("Gérer les épargnes");
            jButton8.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton8ActionPerformed(evt);
                }
            });

            jButton9.setText("Gérer les tontines");
            jButton9.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton9ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton8)
                        .addComponent(jButton9))
                    .addGap(0, 55, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jButton8)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton9)
                    .addGap(0, 24, Short.MAX_VALUE))
            );

            jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Rapport & Dashboard"));

            jButton4.setText("Generer Excel");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            jButton7.setText("Rapports");

            javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
            jPanel4.setLayout(jPanel4Layout);
            jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton4)
                        .addComponent(jButton7))
                    .addGap(0, 88, Short.MAX_VALUE))
            );
            jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jButton4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton7)
                    .addGap(0, 29, Short.MAX_VALUE))
            );

            jTable1.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
            jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

                Class[] types = {Integer.class, String.class, String.class,
                    String.class,  String.class  };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return this.types[columnIndex];
                }

            });
            popupMenu = new JPopupMenu();
            menuItemEpargnes = new JMenuItem("Epargnes");
            menuItemRetraits = new JMenuItem("Retraits");
            menuItemTontine = new JMenuItem("Tontine");
            menuItemMouvements = new JMenuItem("Mouvements");
            menuItemModification= new JMenuItem("Modifier");
            menuItemEpargnes.addActionListener(this);
            menuItemRetraits.addActionListener(this);
            menuItemTontine.addActionListener(this);
            menuItemMouvements.addActionListener(this);
            menuItemModification.addActionListener(this);
            popupMenu.add (menuItemEpargnes);
            popupMenu.add (menuItemRetraits);
            popupMenu.add(menuItemTontine);
            popupMenu.add(menuItemMouvements);
            popupMenu.add(menuItemModification);
            popupMenu.addPopupMenuListener(new PopupMenuListener() {

                @Override
                public void popupMenuWillBecomeVisible(PopupMenuEvent e) {
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            int rowAtPoint = jTable1.rowAtPoint(SwingUtilities.convertPoint(popupMenu, new Point(0, 0), jTable1));
                            if (rowAtPoint > -1) {
                                jTable1.setRowSelectionInterval(rowAtPoint, rowAtPoint);
                            }
                        }
                    });
                }

                @Override
                public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {
                    // TODO Auto-generated method stub

                }

                @Override
                public void popupMenuCanceled(PopupMenuEvent e) {
                    // TODO Auto-generated method stub

                }
            });

            // JFrae
            //BufferedImage bf = ImageIO.read(new File(getClass().getResource("/nehemie_mutuelle/pexels-photo4.jpg").getPath()));
            BufferedImage bf = ImageIO.read(main.class.getClass().getResourceAsStream("/nehemie_mutuelle/pexels-photo4.jpg"));
            this.setContentPane(new backImage(bf));

            jTable1.setAutoCreateRowSorter(true);
            jTable1.setComponentPopupMenu(popupMenu);
            //DefaultTableCellRenderer rigren = new DefaultTableCellRenderer();
            rigren.setHorizontalAlignment(SwingConstants.LEFT);
            //DefaultTableCellRenderer rigren2 = new DefaultTableCellRenderer();
            rigren2.setHorizontalAlignment(SwingConstants.LEFT);
            //Font fo =new Font(jTable1.getFont().getName(), Font.BOLD, 15);

            rigren2.setFont(jTable1.getFont().deriveFont(Font.BOLD));
            rigren.setForeground (Color.BLUE);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(rigren);
            jTable1.getColumnModel().getColumn(1).setCellRenderer(rigren2);
            // table widths
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setFillsViewportHeight(true);
            jTable1.setPreferredScrollableViewportSize(new Dimension(1000,130));
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(230);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(210);

            //jTable1.getColumnModel().getColumn(3).setPreferredWidth(170);
            //jTable1.setSelectionMode(1);
            //DefaultTableCellRenderer rigren2=  new MyNewCellRenderer();
            //rigren2.setHorizontalAlignment(SwingConstants.LEFT)
            //jTable1.setDefaultRenderer(Object.class, rigren2);
            jTable1.getTableHeader().setBackground(Color.LIGHT_GRAY);
            jScrollPane1.setViewportView(jTable1);
            jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event){
                    if (jTable1.getSelectedRow() > -1){
                        popupMenu.getComponent(0).setEnabled(true);
                        popupMenu.getComponent(1).setEnabled(true);
                        popupMenu.getComponent(2).setEnabled(true);
                        popupMenu.getComponent(3).setEnabled(true);
                        popupMenu.getComponent(4).setEnabled(true);
                        int row=jTable1.getSelectedRow();

                        //      String product_type=jTable1.getModel().getValueAt(row, 3).toString();
                        String product_type=jTable1.getValueAt(row, 3).toString();

                        System.out.println("type de produit" + product_type);
                        if(product_type.equalsIgnoreCase("Epargne  Enfant") ||product_type.equalsIgnoreCase("Epargne Enfant") || product_type.equalsIgnoreCase("Epargne Adulte") || product_type.equalsIgnoreCase("Epargne Pers Morale")) {
                            popupMenu.getComponent(2).setEnabled(false);
                            System.out.println(true);
                        }
                        if(product_type.equalsIgnoreCase("Tontine Enfant") ||  product_type.equalsIgnoreCase("Tontine  Enfant")|| product_type.equalsIgnoreCase("Tontine Adulte") || product_type.equalsIgnoreCase("Tontine Pers Morale")) {
                            popupMenu.getComponent(0).setEnabled(false);
                            popupMenu.getComponent(1).setEnabled(false);
                            popupMenu.getComponent(3).setEnabled(false);

                        }

                    }
                }
            }

        );

    } catch (Exception ex) {
        Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
    }

    jLabel3.setText("recherche:");

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

    jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    // print first column value from selected row
    //System.out.println(jTable.getValueAt(jTable.getSelectedRow(), 0).toString());

    //jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("blnk.png")));
    jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override

        public void valueChanged(ListSelectionEvent event) {

            if (jTable1.getSelectedRow() > -1 && ((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)) <= listphoto.size()) {  //&& jTable1.getSelectedRow() <= (listphoto.size()-1)
                System.out.println("listvaluechanged");
                String photo =(String) listphoto.get( ((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0)) -1);
                File f = new File(photo);
                if(f.exists() && !f.isDirectory()) {
                    // do something

                    Image temp = new ImageIcon(photo).getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
                    //          try {
                        //BufferedImage image = ImageIO.read(getClass().getResource(photo));
                        //ImageIcon icon = new ImageIcon(image);
                        jLabel1.setIcon(new javax.swing.ImageIcon(temp));
                        //jLabel1.setIcon(icon);
                        //} catch(IOException ex){
                        //        System.out.println (ex.toString());
                        //        System.out.println("Could not find file " + photo);
                        //    }
                } else {
                    jLabel1.setIcon(null);
                }
                // print first column value from selected row
                //System.out.println(jTable.getValueAt(jTable.getSelectedRow(), 0).toString());
                //jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(photo)));
            }  else {
                jLabel1.setIcon(null);
            }
        }
    });

    jLabel2.setText("Photo");

    jButton10.setText("Uploader la photo");

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jButton10)
            .addContainerGap())
    );

    jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
    jSeparator1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

    jToolBar1.setRollover(true);

    JLabel leftLabel = new JLabel(
        "Your application is running.");
    jStatusBar1.setLeftComponent(leftLabel);
    leftLabel2=new JLabel(jTable1.getRowCount()+" membres");
    jStatusBar1.addRightComponent(leftLabel2);
    final JLabel dateLabel = new JLabel();
    dateLabel.setHorizontalAlignment(JLabel.CENTER);
    jStatusBar1.addRightComponent(dateLabel);

    final JLabel timeLabel = new JLabel();
    timeLabel.setHorizontalAlignment(JLabel.CENTER);
    jStatusBar1.addRightComponent(timeLabel);
    timerThread = new TimerThread(dateLabel, timeLabel);
    timerThread.start();

    jStatusBar1.setMinimumSize(new java.awt.Dimension(200, 6));
    jStatusBar1.setPreferredSize(new java.awt.Dimension(200, 23));

    jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/Liste.png"))); // NOI18N

    jMenu5.setText("Fichier");
    jMenuBar1.add(jMenu5);

    jMenu6.setText("Edition");
    jMenuBar1.add(jMenu6);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jStatusBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(31, 31, 31))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(39, 39, 39)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(117, 117, 117)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(44, 44, 44))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(31, 31, 31))))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(9, 9, 9)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jSeparator1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1)
                            .addComponent(jLabel3)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addGap(21, 21, 21)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(19, 19, 19)))
            .addComponent(jStatusBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents
    public void refresh(){
         int id =-1;
         if(jTable1.getSelectedRow() !=-1) {
              id = (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
         }
         
         try {
                 // TODO add your handling code here:
                     data=getMembres();
                } catch (Exception ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

    Class[] types = {Integer.class, String.class, String.class,
        String.class,  String.class  };

    @Override
    public Class getColumnClass(int columnIndex) {
        return this.types[columnIndex];
    }

});
                     originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
                     if (!jTextField1.getText().isEmpty()){
                         searchTableContents(jTextField1.getText());
                     }
                     leftLabel2.setText(jTable1.getRowCount()+" membres");
                     
                     // table widths 
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setFillsViewportHeight(true);
            jTable1.setPreferredScrollableViewportSize(new Dimension(1000,130));
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(230);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(210);
//            DefaultTableCellRenderer rigren2 = new DefaultTableCellRenderer();
//            rigren2.setHorizontalAlignment(SwingConstants.LEFT);
//Font fo =new Font(jTable1.getFont().getName(), Font.BOLD, 15);
//            rigren2.setFont(jTable1.getFont().deriveFont(Font.BOLD));
            jTable1.getColumnModel().getColumn(1).setCellRenderer(rigren2);
// end ajust jtable 
//            DefaultTableCellRenderer rigren = new DefaultTableCellRenderer();
//rigren.setHorizontalAlignment(SwingConstants.LEFT);
//rigren.setForeground(Color.BLUE);
jTable1.getColumnModel().getColumn(0).setCellRenderer(rigren);

if (id !=-1){
    
    for (int i=0; i<jTable1.getRowCount();i++){
    if ((int) jTable1.getValueAt(i, 0)== id) id=i;
    }
    
    jTable1.setRowSelectionInterval(id, id);
}  // Code à revoir
        
    }
    // Adhesion enfant
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Adhesion_enfant enf = new Adhesion_enfant(this);
        enf.pack();
        enf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        enf.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                try {
                 // TODO add your handling code here:
                     data=getMembres();
                   //  originalTableModel=data;
                } catch (Exception ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

    Class[] types = {Integer.class, String.class, String.class,
        String.class,  String.class  };

    @Override
    public Class getColumnClass(int columnIndex) {
        return this.types[columnIndex];
    }

});  
                    
                           // table widths 
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setFillsViewportHeight(true);
            jTable1.setPreferredScrollableViewportSize(new Dimension(1000,130));
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(230);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(210);

//DefaultTableCellRenderer rigren2 = new DefaultTableCellRenderer();
//rigren2.setHorizontalAlignment(SwingConstants.LEFT);
//Font fo =new Font(jTable1.getFont().getName(), Font.BOLD, 15);
//rigren2.setFont(jTable1.getFont().deriveFont(Font.BOLD));
jTable1.getColumnModel().getColumn(1).setCellRenderer(rigren2);
           //end adjust with
 //                   DefaultTableCellRenderer rigren = new DefaultTableCellRenderer();
 //                   rigren.setForeground (Color.BLUE);
// rigren.setHorizontalAlignment(SwingConstants.LEFT);
jTable1.getColumnModel().getColumn(0).setCellRenderer(rigren);
                     originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
                      if (! jTextField1.getText().isEmpty()){
                         searchTableContents(jTextField1.getText());
                     }
          }
        });
        enf.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
// Adhesion adulte
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Adhesion_adulte adult = new Adhesion_adulte(this);
        adult.pack();
        adult.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        adult.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                 try {
                 // TODO add your handling code here:
                     data=getMembres();
                   //  originalTableModel=data;
                } catch (Exception ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

    Class[] types = {Integer.class, String.class, String.class,
        String.class,  String.class  };

    @Override
    public Class getColumnClass(int columnIndex) {
        return this.types[columnIndex];
    }

}); 
                    
                          // table widths 
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setFillsViewportHeight(true);
            jTable1.setPreferredScrollableViewportSize(new Dimension(1000,130));
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(230);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(210);
//            DefaultTableCellRenderer rigren2 = new DefaultTableCellRenderer();
//            rigren2.setHorizontalAlignment(SwingConstants.LEFT);
//Font fo =new Font(jTable1.getFont().getName(), Font.BOLD, 15);
//            rigren2.setFont(jTable1.getFont().deriveFont(Font.BOLD));
            jTable1.getColumnModel().getColumn(1).setCellRenderer(rigren2);
            
            
            // end ajust jtable 
            
//                    DefaultTableCellRenderer rigren = new DefaultTableCellRenderer();
//rigren.setHorizontalAlignment(SwingConstants.LEFT);
//rigren.setForeground(Color.BLUE);
jTable1.getColumnModel().getColumn(0).setCellRenderer(rigren);
                     originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
                      if (! jTextField1.getText().isEmpty()){
                         searchTableContents(jTextField1.getText());
                     }
            }
        });
        adult.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
    }//GEN-LAST:event_jButton4ActionPerformed
// Adhesion personne morale 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Adhesion_persmor pers = new Adhesion_persmor(this);
        pers.pack();
        pers.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        pers.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                 try {
                 // TODO add your handling code here:
                     data=getMembres();
                 //    originalTableModel=data;
                } catch (Exception ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                }
                    jTable1.setModel(new javax.swing.table.DefaultTableModel(data,header){

    Class[] types = {Integer.class, String.class, String.class,
        String.class,  String.class  };

    @Override
    public Class getColumnClass(int columnIndex) {
        return this.types[columnIndex];
    }

}); 
                    
            // table widths 
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.setFillsViewportHeight(true);
            jTable1.setPreferredScrollableViewportSize(new Dimension(1000,130));
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(220);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(320);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(230);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(210);
//            DefaultTableCellRenderer rigren2 = new DefaultTableCellRenderer();
//rigren2.setHorizontalAlignment(SwingConstants.LEFT);
//Font fo =new Font(jTable1.getFont().getName(), Font.BOLD, 15);
//rigren2.setFont(jTable1.getFont().deriveFont(Font.BOLD));
jTable1.getColumnModel().getColumn(1).setCellRenderer(rigren2);
            // End adjust table width
//                    DefaultTableCellRenderer rigren = new DefaultTableCellRenderer();
//                    rigren.setHorizontalAlignment(SwingConstants.LEFT);
//                    rigren.setForeground(Color.BLUE);
                    jTable1.getColumnModel().getColumn(0).setCellRenderer(rigren);
                     originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
                     if (! jTextField1.getText().isEmpty()){
                         searchTableContents(jTextField1.getText());
                     }

            }
        });
        pers.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Epargneview2 epargne;
        try {
            epargne = new Epargneview2();
             epargne.setLocationRelativeTo(null);
        epargne.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        epargne.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        TontineSynthese ton= new TontineSynthese();
        ton.setLocationRelativeTo(null);
        ton.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ton.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    public static Vector  getMembres() throws Exception {
    conn = Connect.ConnectDb();
    int i=1;
    pre = conn.prepareStatement("SELECT * FROM Profil_enfant");
    ResultSet rs = pre.executeQuery();
    listphoto = new ArrayList <String>();
   // Vector<Vector<String>> membreVector = new Vector<Vector<String>>();
    Vector<Vector> membreVector = new Vector<Vector>();
    while(rs.next()) {
     //   Vector<String> membre = new Vector<String>();
     //   membre.add(String.valueOf(i)); 
        Vector<Object> membre = new Vector<Object>();
        membre.add(i);
        membre.add(rs.getString("Nom")); 
        membre.add(rs.getString("Prenoms")); 
        membre.add(rs.getString("Type_adhesion")+" Enfant");
        membre.add("5000");
        listphoto.add(rs.getString("Photo"));
   //
        membreVector.add(membre);
        i++;
    }
    
    
    pre = conn.prepareStatement("SELECT * FROM Profil_adulte");
    rs = pre.executeQuery();
    
    while(rs.next()) {
        Vector<Object> membre = new Vector<Object>();
//        Vector<String> membre = new Vector<String>();
 //       membre.add(String.valueOf(i)); 
        membre.add(i);
        membre.add(rs.getString("Noms")); 
        membre.add(rs.getString("Prenoms")); 
        membre.add(rs.getString("Type_adhesion")+" Adulte");
        membre.add("5000");
   //
        listphoto.add(rs.getString("Photo"));
        membreVector.add(membre);
        i++;
    }
    
    pre = conn.prepareStatement("SELECT * FROM Profil_persmorale");
    rs = pre.executeQuery();
    while(rs.next()) {
        Vector<Object> membre = new Vector<Object>();
 //       Vector<String> membre = new Vector<String>();
//        membre.add(String.valueOf(i)); 
        membre.add(i); 
        membre.add(rs.getString("Raison_sociale")); 
        membre.add(rs.getString("Activite_principale")); 
        membre.add(rs.getString("Type_adhesion")+" Pers Morale");
        membre.add("5000");
   //
        membreVector.add(membre);
        i++;
    }
        System.out.println("listphoto"+listphoto.get(0));
        
        
        
  
    

/*Close the connection after use (MUST)*/
    if(conn!=null)
        conn.close();

    return membreVector;
}

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception, IOException {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        
//  try{UIManager.setLookAndFeel(new WindowsLookAndFeel());}
//catch(Exception e){}      
 // actual code 
//try{UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());}
//catch(Exception e){}
      
       
           // System.out.println("true");
           // URL themepack = new URL( "file:///home/elommarcarnold/Téléchargements/skins/whistlerthemepack.zip" );
//            URL themepack = new URL("file://"+main.class.getClass().getResource("/nehemie_mutuelle/whistlerthemepack.zip").getPath());
//            System.out.println("url:"+ "file://"+ main.class.getClass().getResource("/nehemie_mutuelle/whistlerthemepack.zip").getPath());
////           URL themepack = new URL("file://"+urlthe);
////           System.out.println("url:"+urlthe);
////           // URL themepack = new URL("file://"+new File("src/nehemie_mutuelle/whistlerthemepack.zip").getAbsolutePath() );
//          Skin skin = SkinLookAndFeel.loadThemePack(themepack);
//          SkinLookAndFeel.setSkin(skin);   
//          UIManager.setLookAndFeel("com.l2fprod.gui.plaf.skin.SkinLookAndFeel");  
//           

        InputStream themepack = main.class.getClass().getResourceAsStream("/nehemie_mutuelle/whistlerthemepack.zip");
       //     System.out.println("url:"+ "file://"+ main.class.getClass().getResourceAsStream("whistlerthemepack.zip"));
//           URL themepack = new URL("file://"+urlthe);
//           System.out.println("url:"+urlthe);
//           // URL themepack = new URL("file://"+new File("src/nehemie_mutuelle/whistlerthemepack.zip").getAbsolutePath() );
          Skin skin = SkinLookAndFeel.loadThemePack(themepack);
          SkinLookAndFeel.setSkin(skin);   
          UIManager.setLookAndFeel("com.l2fprod.gui.plaf.skin.SkinLookAndFeel");  
 
// adding created component to the JFrame using my backImage class
 
 

 
         
	  
      
   

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new main().setVisible(true);
            }
        });
    }
     // Les actions clic droits sont ici
      public void actionPerformed(ActionEvent event) {
        EpargneContext epargne;
        EpargneContextRet epargne2;
        EpargneContext_rel epargne3;
        TontineUser tont = null;
        JMenuItem menu = (JMenuItem) event.getSource();
        if (menu == menuItemEpargnes) {
            if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Enfant")){
                epargne = new EpargneContext((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Enfant" );  
            } else if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Adulte")) {
                 epargne = new EpargneContext((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Adulte" );  
            } else {
                epargne = new EpargneContext((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),"", "Pers Morale" );  
            }
  
      
      epargne.setLocationRelativeTo(null);
      epargne.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
      epargne.setVisible(true);
     
    

        } else if (menu == menuItemRetraits) {
       //      System.out.println("MenuItemCredits");
            if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Enfant")){
                epargne2 = new EpargneContextRet((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Enfant" );  
            } else if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Adulte")) {
                 epargne2 = new EpargneContextRet((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Adulte" );  
            } else {
                epargne2 = new EpargneContextRet((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),"", "Pers Morale" );  
            }
  
      
            epargne2.setLocationRelativeTo(null);
            epargne2.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            epargne2.setVisible(true);
        } else if (menu == menuItemTontine) {
             if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Enfant")){
                 try {
                     tont= new TontineUser((String) (jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Enfant");
                 } catch (SQLException ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                 }

             }else if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Adulte")) {
                 try {
                     tont= new TontineUser((String) (jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Adulte");
                 } catch (SQLException ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                 }
             } else {
                 try { 
                     tont= new TontineUser((String) (jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Pers Morale");
                 } catch (SQLException ex) {
                     Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
             
            tont.setLocationRelativeTo(null);
            tont.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            tont.setVisible(true);
        } else if (menu == menuItemMouvements) {
          if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Enfant")){
                epargne3 = new EpargneContext_rel((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Enfant" );  
            } else if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Adulte")) {
                 epargne3 = new EpargneContext_rel((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), "Adulte" );  
            } else {
                epargne3 = new EpargneContext_rel((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),"", "Pers Morale" );  
            }
  
      
            epargne3.setLocationRelativeTo(null);
            epargne3.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            epargne3.setVisible(true);    
    } else if (menu==menuItemModification){
        
        // je gère pour le moment les adultes 
          if (((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 3))).contains("Adulte")){
              try {
                  Mod_adulte modadulte= new Mod_adulte((String)(jTable1.getValueAt(jTable1.getSelectedRow(), 1)),(String)(jTable1.getValueAt(jTable1.getSelectedRow(), 2)), this);
                  modadulte.setLocationRelativeTo(null);
                  modadulte.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                  modadulte.setVisible(true);    
              } catch (SQLException ex) {
                  Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
        
    }
    }
   
    DocumentListener documentListener;
    Vector originalTableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private nehemie_mutuelle.JStatusBar jStatusBar1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
