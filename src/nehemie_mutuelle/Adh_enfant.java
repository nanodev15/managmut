/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nehemie_mutuelle;

import com.google.i18n.phonenumbers.NumberParseException;
import com.google.i18n.phonenumbers.PhoneNumberUtil;
import com.google.i18n.phonenumbers.Phonenumber;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import nehemie_mutuelle.Adhesion_enfant.Emailvalidator;
import org.apache.commons.lang.WordUtils;

/**
 *
 * @author elommarcarnold
 */
public class Adh_enfant extends javax.swing.JFrame {
    Connection connect=null;
    PreparedStatement pst=null;
    private String enfant_photourl;
    String replegal_photourl=getClass().getResource("blank.png").getPath();
    private main main;
    
    class UppercaseDocumentFilter extends DocumentFilter {
    public void insertString(DocumentFilter.FilterBypass fb, int offset,
            String text, AttributeSet attr) throws BadLocationException {

        fb.insertString(offset, text.toUpperCase(), attr);
    }

    public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs) throws BadLocationException {

        fb.replace(offset, length, text.toUpperCase(), attrs);
    }
}

    /** Creates new form Mod_adulte */
    public Adh_enfant(main mn) {
        this.main=mn;
        setTitle("Adhésion enfant");
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
     private void performSummation(java.awt.event.ActionEvent evt) {
        int total = 0;
        if(jTextField16.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField16.getText());
            }catch(NumberFormatException nbx){
            }
        }

        if(jTextField17.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField17.getText());
            }catch(NumberFormatException nbx){
            }
        }
        
        if(jTextField2.getText().trim().length() > 0){
            try{
                total += Integer.parseInt(jTextField2.getText());
            }catch(NumberFormatException nbx){
            }
        }

       

        jTextField5.setText(""+total);

    }
    
      private static boolean isAllUpper(String s){
        for(char c:s.toCharArray()){
            if(Character.isLetter(c) && Character.isLowerCase(c)){
                return false;
          }
        }
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        demoDateField3 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel16 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox(new Object[] {
            "Nouveau rep. légal",
            new JSeparator(JSeparator.HORIZONTAL),

        });
        jPanel18 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel33 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jPanel21 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel36 = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jPanel38 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jPanel39 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox();
        jPanel40 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel42 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jPanel43 = new javax.swing.JPanel();
        jPanel44 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jPanel32 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jPanel24 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jPanel25 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jFormattedTextField3 = new javax.swing.JFormattedTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel45 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel29 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        demoDateField1 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jPanel30 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        demoDateField2 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/adhenfant.png"))); // NOI18N

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel4.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel6.setLayout(new java.awt.GridLayout(1, 2));

        jLabel4.setText("Nom");
        jPanel6.add(jLabel4);

        DocumentFilter filter = new UppercaseDocumentFilter();
        ((AbstractDocument) jTextField3.getDocument()).setDocumentFilter(filter);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jPanel6.add(jTextField3);

        jPanel4.add(jPanel6);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jLabel5.setText("Prénom");
        jPanel5.add(jLabel5);

        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        jPanel5.add(jTextField4);

        jPanel4.add(jPanel5);

        jPanel7.setLayout(new java.awt.GridLayout(1, 2));

        jLabel6.setText("Date de naiss.");
        jPanel7.add(jLabel6);

        demoDateField3.setYearDigitsAmount(4);
        jPanel7.add(demoDateField3);

        jPanel4.add(jPanel7);

        jPanel4.setBounds(20, 20, 200, 170);
        jPanel8.setLayout(new java.awt.GridLayout(1, 2));

        jLabel7.setText("Lieu de naiss.");
        jPanel8.add(jLabel7);

        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField6FocusLost(evt);
            }
        });
        jPanel8.add(jTextField6);

        jPanel4.add(jPanel8);

        jPanel31.setLayout(new java.awt.GridLayout(1, 2));

        jLabel23.setText("Sexe");
        jPanel31.add(jLabel23);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Homme", "Femme", " " }));
        jPanel31.add(jComboBox4);

        jPanel4.add(jPanel31);

        jPanel10.setLayout(new java.awt.GridLayout(1, 2, 0, 5));

        jPanel11.setLayout(new java.awt.GridLayout(1, 2));

        jLabel11.setText("Photo");
        jPanel11.add(jLabel11);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.add(jLabel2);

        jPanel10.add(jPanel11);

        jPanel9.setLayout(new java.awt.GridLayout(1, 2, 0, 5));
        jPanel9.add(jLabel3);

        jButton3.setText("Uploader la photo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton3);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))))
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 396, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22))
        );

        jTabbedPane1.addTab("Etat civil", jPanel1);

        jPanel4.setBounds(20, 20, 200, 170);

        jPanel12.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jPanel15.setLayout(new java.awt.GridLayout(1, 2));

        jLabel10.setText("Profession");
        jPanel15.add(jLabel10);

        jTextField9.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField9FocusLost(evt);
            }
        });
        jPanel15.add(jTextField9);

        jPanel12.add(jPanel15);

        jPanel17.setLayout(new java.awt.GridLayout(1, 2));

        jLabel13.setText("Quartier");
        jPanel17.add(jLabel13);

        jTextField11.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField11FocusLost(evt);
            }
        });
        jPanel17.add(jTextField11);

        jPanel12.add(jPanel17);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 394, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 301, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Etat civil(suite)", jPanel2);

        jPanel13.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel14.setLayout(new java.awt.GridLayout(1, 2));

        jLabel8.setText("Type");
        jPanel14.add(jLabel8);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tuteur", "Parent" }));
        jPanel14.add(jComboBox1);

        jPanel13.add(jPanel14);

        jPanel16.setLayout(new java.awt.GridLayout(1, 2));

        jLabel9.setText("Rep. légal");
        jPanel16.add(jLabel9);

        jComboBox2.setRenderer(new SeparatorComboBoxRenderer());
        ResultSet rst=null;
        String sql="SELECT * FROM representant_legal ORDER BY TRIM(Nom) ASC , TRIM(Prenom) ASC;";
        connect=Connect.ConnectDb();
        Statement stmt = null;
        try {
            stmt= connect.createStatement();
            rst=stmt.executeQuery(sql);
            while(rst.next()) {
                jComboBox2.addItem(rst.getString(3)+", "+rst.getString(4));
            }

        } catch (SQLException ex) {
            Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
        }
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jPanel16.add(jComboBox2);

        jPanel13.add(jPanel16);

        jPanel18.setLayout(new java.awt.GridLayout(1, 2));

        jLabel12.setText("Nom");
        jPanel18.add(jLabel12);

        DocumentFilter filter2 = new UppercaseDocumentFilter();
        ((AbstractDocument) jTextField10.getDocument()).setDocumentFilter(filter2);
        jTextField10.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField10FocusLost(evt);
            }
        });
        jPanel18.add(jTextField10);

        jPanel13.add(jPanel18);

        jPanel4.setBounds(20, 20, 200, 170);
        jPanel19.setLayout(new java.awt.GridLayout(1, 2));

        jLabel14.setText("Prénoms");
        jPanel19.add(jLabel14);

        jTextField13.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField13FocusLost(evt);
            }
        });
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField13KeyTyped(evt);
            }
        });
        jPanel19.add(jTextField13);

        jPanel13.add(jPanel19);

        jPanel33.setLayout(new java.awt.GridLayout(1, 2));

        jLabel27.setText("Sexe");
        jPanel33.add(jLabel27);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Homme", "Femme" }));
        jPanel33.add(jComboBox6);

        jPanel13.add(jPanel33);

        jPanel21.setLayout(new java.awt.GridLayout(1, 2, 0, 5));

        jPanel34.setLayout(new java.awt.GridLayout(1, 2));

        jLabel15.setText("Photo");
        jPanel34.add(jLabel15);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png"))); // NOI18N
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel34.add(jLabel16);

        jPanel21.add(jPanel34);

        jPanel35.setLayout(new java.awt.GridLayout(1, 2, 0, 5));
        jPanel35.add(jLabel28);

        jButton4.setText("Uploader la photo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel35.add(jButton4);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))))
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 396, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanel13, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22))
        );

        jTabbedPane1.addTab("Rep légal", jPanel3);

        jPanel37.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel38.setLayout(new java.awt.GridLayout(1, 2));

        jLabel29.setText("Adresse");
        jPanel38.add(jLabel29);

        jTextField14.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField14FocusLost(evt);
            }
        });
        jPanel38.add(jTextField14);

        jPanel37.add(jPanel38);

        jPanel39.setLayout(new java.awt.GridLayout(1, 2));

        jLabel30.setText("Téléphone");
        jPanel39.add(jLabel30);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "National", "International" }));
        jComboBox8.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox8ItemStateChanged(evt);
            }
        });
        jPanel39.add(jComboBox8);

        jPanel37.add(jPanel39);

        jPanel40.setLayout(new java.awt.GridLayout(1, 2));
        jPanel40.add(jLabel31);

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusLost(evt);
            }
        });
        jPanel40.add(jFormattedTextField1);

        jPanel37.add(jPanel40);

        jPanel42.setLayout(new java.awt.GridLayout(1, 2));
        jPanel42.add(jLabel33);
        jPanel42.add(jLabel34);

        jPanel37.add(jPanel42);

        jPanel4.setBounds(20, 20, 200, 170);
        jPanel41.setLayout(new java.awt.GridLayout(1, 2));

        jLabel32.setText("Email");
        jPanel41.add(jLabel32);

        jTextField20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField20KeyTyped(evt);
            }
        });
        jPanel41.add(jTextField20);

        jPanel37.add(jPanel41);

        jPanel43.setLayout(new java.awt.GridLayout(1, 2, 0, 5));

        jPanel44.setLayout(new java.awt.GridLayout(1, 2));
        jPanel43.add(jPanel44);

        org.jdesktop.layout.GroupLayout jPanel36Layout = new org.jdesktop.layout.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel36Layout.createSequentialGroup()
                        .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 388, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel36Layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanel37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Rep légal(suite)", jPanel36);

        jPanel22.setLayout(new java.awt.GridLayout(10, 1, 0, 5));

        jPanel23.setLayout(new java.awt.GridLayout(1, 2));

        jLabel17.setText("Type d'adhésion");
        jPanel23.add(jLabel17);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Epargne", "Tontine", "Epargne et tontine" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jPanel23.add(jComboBox3);

        jPanel22.add(jPanel23);

        jPanel32.setLayout(new java.awt.GridLayout(1, 2));

        jLabel26.setText("Bénéficiaires");
        jPanel32.add(jLabel26);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Parent/Tuteur", "Enfant" }));
        jPanel32.add(jComboBox5);

        jPanel22.add(jPanel32);

        jPanel24.setLayout(new java.awt.GridLayout(1, 2));

        jLabel18.setText("Numéro carnet epargne");
        jPanel24.add(jLabel18);

        try {
            jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel24.add(jFormattedTextField2);

        jPanel22.add(jPanel24);

        jPanel25.setLayout(new java.awt.GridLayout(1, 2));

        jLabel19.setText("Numéro carnet tontine");
        jPanel25.add(jLabel19);

        try {
            jFormattedTextField3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField3.setEnabled(false);
        jPanel25.add(jFormattedTextField3);

        jPanel22.add(jPanel25);

        jPanel4.setBounds(20, 20, 200, 170);
        jPanel26.setLayout(new java.awt.GridLayout(1, 2));

        jLabel20.setText("Droits d'adhésion");
        jPanel26.add(jLabel20);

        DocumentListener documentListener = new DocumentListener() {

            @Override
            public void removeUpdate(DocumentEvent e) {
                performSummation(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                performSummation(null);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        };

        DocumentFilter numericFilter = new DocumentFilter(){

            @Override
            public void insertString(FilterBypass fb, int offset,
                String string, AttributeSet attr)
            throws BadLocationException {
                fb.insertString(offset, string.replaceAll("[^\\d]", ""), attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs)
            throws BadLocationException {

                fb.replace(offset, length, text.replaceAll("[^\\d]", ""), attrs);
            }
        };
        ((AbstractDocument) jTextField16.getDocument()).setDocumentFilter(numericFilter);
        ((AbstractDocument) jTextField17.getDocument()).setDocumentFilter(numericFilter);
        ((AbstractDocument) jTextField2.getDocument()).setDocumentFilter(numericFilter);
        ((AbstractDocument) jTextField5.getDocument()).setDocumentFilter(numericFilter);
        jTextField16.setText("2500");
        jTextField16.getDocument().addDocumentListener(documentListener);
        jTextField17.getDocument().addDocumentListener(documentListener);
        jTextField2.getDocument().addDocumentListener(documentListener);
        jPanel26.add(jTextField16);

        jPanel22.add(jPanel26);

        jPanel27.setLayout(new java.awt.GridLayout(1, 2));

        jLabel21.setText("Part Sociale");
        jPanel27.add(jLabel21);
        jPanel27.add(jTextField17);

        jPanel22.add(jPanel27);

        jPanel28.setLayout(new java.awt.GridLayout(1, 2));

        jLabel22.setText("Dépôt initial");
        jPanel28.add(jLabel22);
        jPanel28.add(jTextField2);

        jPanel22.add(jPanel28);

        jPanel45.setLayout(new java.awt.GridLayout(1, 2));

        jLabel35.setText("Total");
        jPanel45.add(jLabel35);

        jTextField5.setText(jTextField16.getText());
        jPanel45.add(jTextField5);

        jPanel22.add(jPanel45);

        jPanel29.setLayout(new java.awt.GridLayout(1, 2));

        jLabel25.setText("Date d'adhésion épargne");
        jPanel29.add(jLabel25);

        demoDateField1.setYearDigitsAmount(4);
        jPanel29.add(demoDateField1);

        jPanel22.add(jPanel29);

        jPanel30.setLayout(new java.awt.GridLayout(1, 2));

        jLabel24.setText("Date d'adhésion tontine");
        jPanel30.add(jLabel24);

        demoDateField2.setYearDigitsAmount(4);
        demoDateField2.setEnabled(false);
        jPanel30.add(demoDateField2);

        jPanel22.add(jPanel30);

        org.jdesktop.layout.GroupLayout jPanel20Layout = new org.jdesktop.layout.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel20Layout.createSequentialGroup()
                .add(28, 28, 28)
                .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 389, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel20Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 308, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Adhésion", jPanel20);

        jButton2.setText("Enregistrer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
            .add(jSeparator1)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed

    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        // TODO add your handling code here:
                // TODO add your handling code here:
        jTextField3.setText(jTextField3.getText().trim());
        jTextField3.setText(jTextField3.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // TODO add your handling code here:
     if (!(Character.isAlphabetic(evt.getKeyChar()) || evt.getKeyChar() == '-' ) && !Character.isSpaceChar(evt.getKeyChar())) {
        evt.consume();
    } else if (jTextField4.getText().trim().length() == 0 ) {            //&& Character.isLowerCase(evt.getKeyChar())
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    } else if (jTextField4.getText().endsWith(" ") ) {
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else{
         evt.setKeyChar(Character.toLowerCase(evt.getKeyChar()));
    }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        // TODO add your handling code here:
         // TODO add your handling code here:
        jTextField4.setText(jTextField4.getText().trim());
        jTextField4.setText(jTextField4.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField4FocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          JFileChooser chooser = new JFileChooser();
                int returnVal = chooser.showOpenDialog(null);
                if (returnVal == JFileChooser.APPROVE_OPTION) {
             try {
                 enfant_photourl=chooser.getSelectedFile().getCanonicalPath().replace("\\", "\\\\");
                 System.out.println(chooser.getSelectedFile().getAbsolutePath());
             } catch (IOException ex) {
                 Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
             }
                   
                }
                
                if (enfant_photourl!= null && !enfant_photourl.equals("")) {
            try {
                Image temp = new ImageIcon(enfant_photourl).getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
                jLabel2.setIcon(new ImageIcon(temp));
                //JLabel picture = new JLabel(new ImageIcon(temp));
                //jLabel1.setBounds(250, 20, 180, 180);
                //jPanel1.add(picture);
                System.out.println(enfant_photourl);
            } catch (Exception e) {
            }
        } else {
            try {
                Image temp = new ImageIcon(
                        getClass().getResource("blank.png")).getImage().getScaledInstance(180, 180,
                        Image.SCALE_SMOOTH);
                //JLabel picture = new JLabel(new ImageIcon(temp));
                  jLabel2.setIcon(new ImageIcon(temp));
                  enfant_photourl= getClass().getResource("blank.png").getPath();
               // jLabel5.setBounds(250, 20, 180, 180);
               // jPanel1.add(picture);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField6FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusLost
        // TODO add your handling code here:
           // TODO add your handling code here:
        jTextField6.setText(jTextField6.getText().trim());
        jTextField6.setText(jTextField6.getText().replaceAll("\\s+", " "));
        jTextField6.setText(WordUtils.capitalizeFully(jTextField6.getText()));
    }//GEN-LAST:event_jTextField6FocusLost

    private void jTextField9FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField9FocusLost
        // TODO add your handling code here:
           // TODO add your handling code here:
        jTextField9.setText(jTextField9.getText().trim());
        jTextField9.setText(jTextField9.getText().replaceAll("\\s+", " "));
        jTextField9.setText(WordUtils.capitalizeFully(jTextField9.getText()));
    }//GEN-LAST:event_jTextField9FocusLost

    private void jTextField11FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField11FocusLost
        // TODO add your handling code here:
           // TODO add your handling code here:
        jTextField11.setText(jTextField11.getText().trim());
        jTextField11.setText(jTextField11.getText().replaceAll("\\s+", " "));
        jTextField11.setText(WordUtils.capitalizeFully(jTextField11.getText()));
    }//GEN-LAST:event_jTextField11FocusLost

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange()== ItemEvent.SELECTED){
            jLabel34.setText("");
        if (jComboBox2.getSelectedIndex()==0){
            jTextField10.setText("");
            jTextField13.setText("");
            jTextField14.setText("");
           // jFormattedTextField2.setText("(+IND-)NN-NN-NN-NN");
             jFormattedTextField1.setText("");
            jTextField20.setText("");
            jComboBox6.setSelectedIndex(0);
            jComboBox1.setSelectedIndex(1);
            //jCheckBox1.setSelected(true);
            Image temp = new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(100, 100,
                    Image.SCALE_SMOOTH);
                //JLabel picture = new JLabel(new ImageIcon(temp));
            jLabel16.setIcon(new ImageIcon(temp));
            

            
            
        } else {
        String nom =((String) jComboBox2.getSelectedItem()).split(", ")[0];
        String prenom =((String) jComboBox2.getSelectedItem()).split(", ")[1];
        jTextField10.setText(nom);
        jTextField13.setText(prenom);
        ResultSet rst=null;
        String sql0="SELECT * FROM representant_legal WHERE Nom= '" + nom + "' AND lower(Prenom)= '"+prenom.toLowerCase(Locale.FRENCH)+ "'";
          connect=Connect.ConnectDb();
            Statement stmt = null;
              try {
                  stmt= connect.createStatement();
                   rst=stmt.executeQuery(sql0);
                   int i=0;
                   while(rst.next()) {
                       if (rst.getString(2).equalsIgnoreCase("parent")) {
                           jComboBox1.setSelectedIndex(1);
                       } else {
                           jComboBox1.setSelectedIndex(0);
                       }
               
                       jTextField14.setText(rst.getString(5));
                       if(rst.getString(6).startsWith("+")){
                           jComboBox8.setSelectedIndex(1);
                       } else {
                           jComboBox8.setSelectedIndex(0);
                       }
                       jFormattedTextField1.setText(rst.getString(6));
                       jTextField20.setText(rst.getString(7));
                       if (rst.getString(8).trim().equalsIgnoreCase("masculin")) {
                            System.out.println(i+" "+rst.getString(8)+",");
                           jComboBox6.setSelectedIndex(0);
                       } else {
                      //     System.out.println("false");
                      //     System.out.println(i+" "+rst.getString(8)+",");
                           jComboBox6.setSelectedIndex(1);
                       }
                       try {
                            Image temp = new ImageIcon(rst.getString(9)).getImage().getScaledInstance(180, 180, Image.SCALE_SMOOTH);
                            jLabel16.setIcon(new ImageIcon(temp));
                            //JLabel picture = new JLabel(new ImageIcon(temp));
                            //jLabel1.setBounds(250, 20, 180, 180);
                           //jPanel1.add(picture);
                
                       } catch (Exception e) {
                       }
                       i++;
        }
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              
              
        
       
        }
    }                           
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jTextField10FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField10FocusLost
        // TODO add your handling code here:
        jTextField10.setText(jTextField10.getText().trim());
        jTextField10.setText(jTextField10.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField10FocusLost

    private void jTextField13FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField13FocusLost
        // TODO add your handling code here:
        jTextField13.setText(jTextField13.getText().trim());
        jTextField13.setText(jTextField13.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField13FocusLost

    private void jTextField13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyTyped
        // TODO add your handling code here:
    if (!Character.isAlphabetic(evt.getKeyChar()) && !Character.isSpaceChar(evt.getKeyChar())) {
        evt.consume();
    } else if (jTextField13.getText().trim().length() == 0 ) {            //&& Character.isLowerCase(evt.getKeyChar())
            evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else if(jTextField13.getText().endsWith(" ") ){
        evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
    }else{
         evt.setKeyChar(Character.toLowerCase(evt.getKeyChar()));
    }
    }//GEN-LAST:event_jTextField13KeyTyped

    private void jTextField14FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField14FocusLost
        // TODO add your handling code here:
        jTextField14.setText(jTextField14.getText().trim());
        jTextField14.setText(jTextField14.getText().replaceAll("\\s+", " "));
    }//GEN-LAST:event_jTextField14FocusLost

    private void jTextField20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField20KeyTyped
        // TODO add your handling code here:
        jTextField20.setText(jTextField20.getText().trim());

    }//GEN-LAST:event_jTextField20KeyTyped

    private void jComboBox8ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox8ItemStateChanged
    
        if (jComboBox8.getSelectedIndex()==0){
             try {
                
          jFormattedTextField1.setDocument(new javax.swing.text.PlainDocument());       
             jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-##-##")));
                } catch (java.text.ParseException ex) {
                 ex.printStackTrace();
                
         }
        }else {
    
        
           jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory());  
          
           jFormattedTextField1.setDocument(new PhoneDocument());
            jFormattedTextField1.setText("+");

        }
    }//GEN-LAST:event_jComboBox8ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                replegal_photourl=chooser.getSelectedFile().getCanonicalPath().replace("\\", "\\\\");
            } catch (IOException ex) {
                Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("choix"+chooser.getSelectedFile().getAbsolutePath());
        }
         System.out.println("choix"+replegal_photourl);
        if (replegal_photourl!= null && !replegal_photourl.equals("")) {
            try {
                Image temp = new ImageIcon(replegal_photourl).getImage().getScaledInstance(90, 90, Image.SCALE_SMOOTH);
                jLabel16.setIcon(new ImageIcon(temp));
                //JLabel picture = new JLabel(new ImageIcon(temp));
                //jLabel1.setBounds(250, 20, 180, 180);
                //jPanel1.add(picture);
                System.out.println(replegal_photourl);
            } catch (Exception e) {
            }
        } else {
            try {
                Image temp = new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH);
                replegal_photourl= getClass().getResource("blank.png").getPath();
                System.out.println("Il est entré ici et vaut"+replegal_photourl);
                //JLabel picture = new JLabel(new ImageIcon(temp));
                jLabel16.setIcon(new ImageIcon(temp));
                // jLabel5.setBounds(250, 20, 180, 180);
                // jPanel1.add(picture);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
         if (jComboBox3.getSelectedIndex()==0){
            jFormattedTextField3.setText("");
            jFormattedTextField3.setEnabled(false);
           
            jFormattedTextField2.setEnabled(true);
            jFormattedTextField2.setText("");
            jTextField2.setEnabled(true);
            demoDateField2.setDate(null);
            demoDateField2.setEnabled(false);
            demoDateField1.setDate(null);
            demoDateField1.setEnabled(true);
        } else if (jComboBox3.getSelectedIndex()==1){
             jFormattedTextField2.setText("");
             jFormattedTextField2.setEnabled(false);
             jFormattedTextField3.setEnabled(true);
             jFormattedTextField3.setText("");
             jTextField2.setEnabled(false);
             demoDateField1.setDate(null);
             demoDateField1.setEnabled(false);
             demoDateField2.setDate(null);
             demoDateField2.setEnabled(true);
        } else {
            jFormattedTextField2.setEnabled(true);
            jFormattedTextField2.setText("");
            jFormattedTextField3.setEnabled(true);
            jFormattedTextField3.setText("");
            jFormattedTextField2.setEnabled(true);
            jTextField2.setEnabled(true);
             demoDateField1.setDate(null);
             demoDateField1.setEnabled(true);
             demoDateField2.setDate(null);
             demoDateField2.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jFormattedTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusGained
        // TODO add your handling code here:
        jLabel34.setText("");
        
        if (jComboBox8.getSelectedIndex()==1) {
           
              
             if (jFormattedTextField1.getText().equalsIgnoreCase("+")){
                 
                    jFormattedTextField1.setDocument(new PhoneDocument());
                  jFormattedTextField1.setText("+");
             } else {
                 String before =jFormattedTextField1.getText();
                 before=before.replaceAll("\\s", "");
                 jFormattedTextField1.setText(before);
                 
             }
        }
    }                                                

                                       

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }    
    
    private boolean verifynumcarn(int i) throws SQLException {
        String sql0="";
        if (i==0) sql0="SELECT Num_carnet FROM Profil_adulte WHERE Type_adhesion='"+"Epargne"+"' UNION SELECT LEFT(Num_carnet,4) FROM Profil_adulte WHERE Type_adhesion='"+"Epargne et tontine"+"'" + " UNION " +"SELECT Num_carnet FROM Profil_enfant WHERE Type_adhesion='"+"Epargne"+"' UNION SELECT LEFT(Num_carnet,4) FROM Profil_enfant WHERE Type_adhesion='"+"Epargne et tontine"+"'" + " UNION "+ "SELECT Num_carnet FROM Profil_persmorale WHERE Type_adhesion='"+"Epargne"+"' UNION SELECT LEFT(Num_carnet,4) FROM Profil_persmorale WHERE Type_adhesion='"+"Epargne et tontine"+"'";
        else sql0="SELECT Num_carnet FROM Profil_adulte WHERE Type_adhesion='"+"Tontine"+"' UNION SELECT RIGHT(Num_carnet,4) FROM Profil_adulte WHERE Type_adhesion='"+"Epargne et tontine"+"'" + " UNION " +"SELECT Num_carnet FROM Profil_enfant WHERE Type_adhesion='"+"Tontine"+"' UNION SELECT RIGHT(Num_carnet,4) FROM Profil_enfant WHERE Type_adhesion='"+"Epargne et tontine"+"'" + " UNION "+ "SELECT Num_carnet FROM Profil_persmorale WHERE Type_adhesion='"+"Tontine"+"' UNION SELECT RIGHT(Num_carnet,4) FROM Profil_persmorale WHERE Type_adhesion='"+"Epargne et tontine"+"'";
           
            // Vérifier numero carnet 
            connect=Connect.ConnectDb();
            Statement stmt = null;
            ResultSet rs = null;
            
              try {
                  stmt= connect.createStatement();
                  rs=stmt.executeQuery(sql0);
                  if(i==0) {  // compare tontine
                while (rs.next()) {
                     if(jFormattedTextField2.getText().equalsIgnoreCase(rs.getString(1))) return true;
                  }
                 } else {
                       while (rs.next()) {
                     if(jFormattedTextField3.getText().equalsIgnoreCase(rs.getString(1))) return true;
                  }
                  }
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              
              connect.close();
              stmt.close();
              rs.close();
            return false;
    }

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {                                            
        // TODO add your handling code here:
        if (jComboBox1.getSelectedIndex()==0){
            jFormattedTextField3.setText("");
            jFormattedTextField3.setEnabled(false);
           
            jFormattedTextField1.setEnabled(true);
            jFormattedTextField1.setText("");
            jTextField13.setEnabled(true);
            demoDateField3.setDate(null);
            demoDateField3.setEnabled(false);
            demoDateField2.setDate(null);
            demoDateField2.setEnabled(true);
        } else if (jComboBox1.getSelectedIndex()==1){
             jFormattedTextField1.setText("");
             jFormattedTextField1.setEnabled(false);
             jFormattedTextField3.setEnabled(true);
             jFormattedTextField3.setText("");
             jTextField13.setEnabled(false);
             demoDateField2.setDate(null);
             demoDateField2.setEnabled(false);
             demoDateField3.setDate(null);
             demoDateField3.setEnabled(true);
        } else {
            jFormattedTextField1.setEnabled(true);
            jFormattedTextField1.setText("");
            jFormattedTextField3.setEnabled(true);
            jFormattedTextField3.setText("");
            jFormattedTextField1.setEnabled(true);
            jTextField13.setEnabled(true);
             demoDateField2.setDate(null);
             demoDateField2.setEnabled(true);
             demoDateField3.setDate(null);
             demoDateField3.setEnabled(true);
        }
    }//GEN-LAST:event_jFormattedTextField1FocusGained

    private void jFormattedTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusLost
        // TODO add your handling code here:
          if (jComboBox8.getSelectedIndex()==1){  //international
            PhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();
            Phonenumber.PhoneNumber phoneNumber;
        try {
            phoneNumber = phoneUtil.parse(jFormattedTextField1.getText(), "");
            if (!phoneUtil.isValidNumber(phoneNumber)){
                jLabel34.setText("Le numéro n'est pas valide");
                jLabel34.setForeground(Color.red);                                             // set color to red 
            }
            
            String formatted = phoneUtil.format(phoneNumber, PhoneNumberUtil.PhoneNumberFormat.INTERNATIONAL);
            jFormattedTextField1.setDocument(new javax.swing.text.PlainDocument());
            jFormattedTextField1.setText(formatted);
        } catch (NumberParseException ex) {
            jLabel34.setText("Le numéro n'est pas valide");
            jLabel34.setForeground(Color.red); 
            Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
        }

            
        }
    }//GEN-LAST:event_jFormattedTextField1FocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     boolean res1=false;
        boolean res2=false;
        if(jComboBox3.getSelectedIndex()==0) {
        try {
                  res1 = verifynumcarn(0);
                 
             } catch (SQLException ex) {
                 Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
             }
        } else if (jComboBox3.getSelectedIndex()==1) {
         try {
                  res2 = verifynumcarn(1);
               
             } catch (SQLException ex) {
                 Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
             }

       } else {
            
             try {
                  res1= verifynumcarn(0);
                  res2 = verifynumcarn(1);
                 
             } catch (SQLException ex) {
                 Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
             }
            
        }

// TODO add your handling code here:
         Emailvalidator emailValidator = new Emailvalidator();
          if(jTextField3.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Nom");
        } else if (! isAllUpper(jTextField3.getText())) {
            JOptionPane.showMessageDialog(this, "Nom tout en majuscules");
        } else if(jTextField4.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ prénom");
//        } else if(jFormattedTextField2.getText().equalsIgnoreCase("dd/MM/yyyy")){
//             JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ date de naissance");
//        } else if(!jFormattedTextField2.isValid()) {
            
      // Date de naissance non oblig      
     //   } else if (demoDateField3.getDate()==null){   
      //      JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ date de naissance au format dd/MM/yyyy");
      
// Lieu de naissance non oblig

//  } else if (jTextField6.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ lieu de naissance"); 
//        } else if (jTextField11.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner le quartier");
//        }else if (jTextField9.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner la profession");
        } else if (jTextField10.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le nom du représentant légal");
        } else if (! isAllUpper(jTextField10.getText())){
            JOptionPane.showMessageDialog(this, "nom du représentant légal tout en majuscules");
        }  else if (jTextField13.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le prénom du représentant légal");
   //     }  else if (jTextField14.getText().isEmpty()){
 //           JOptionPane.showMessageDialog(this, "Veuillez renseigner l'adresse du représentant légal");
//        } else if (jFormattedTextField2.getText().equalsIgnoreCase("(+IND-)NN-NN-NN-NN")){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner le téléphone du représentant légal");
//        } else if (jTextField20.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Veuillez renseigner l'email du représentant légal");
        } else if (jFormattedTextField1.getText().equalsIgnoreCase("  -  -  -  ") || jFormattedTextField1.getText().equalsIgnoreCase("+") ){
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Téléphone");
        
        
        } else if (! jTextField20.getText().isEmpty() && !emailValidator.validate(jTextField20.getText())){
            JOptionPane.showMessageDialog(this, "Email invalide");
        }else if (jComboBox5.getSelectedIndex()!=0 && jComboBox5.getSelectedIndex()!=1) { //condition bête
            JOptionPane.showMessageDialog(this, "Veuillez choisir le bénéficiaire");

        } else if (jComboBox1.getSelectedIndex()!=1 && jComboBox1.getSelectedIndex()!=0){  // Condition bête aussi
            JOptionPane.showMessageDialog(this, "Veuillez renseigner le statut du représentant légal (parent ou tuteur)");

        } else if (jTextField16.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Veuillez renseigner les droits d'adhésion");  
            
      //  }else if (jTextField17.getText().isEmpty()){
     //      JOptionPane.showMessageDialog(this, "Veuillez renseigner la part d'adhésion");
//           } else if () else if (jTextField2.getText().isEmpty()) {
//           JOptionPane.showMessageDialog(this, "Veuillez renseigner le champ Dépôt");
        
        } else if (jFormattedTextField2.getText().equalsIgnoreCase("0000") || jFormattedTextField3.getText().equalsIgnoreCase("0000")) { 
            
         JOptionPane.showMessageDialog(this, "Numéro de carnet 0000 invalide");
        } else if (jComboBox3.getSelectedIndex()==0 && jFormattedTextField2.getText().trim().isEmpty()) {
          JOptionPane.showMessageDialog(this, "Numéro de carnet Epargne invalide");   
        }else if (jComboBox3.getSelectedIndex()==1 && jFormattedTextField3.getText().trim().isEmpty()) { 
           JOptionPane.showMessageDialog(this, "Numéro de carnet Tontine invalide");   
        } else if (jComboBox3.getSelectedIndex()==2 && (jFormattedTextField2.getText().trim().isEmpty() || jFormattedTextField3.getText().trim().isEmpty())){
           JOptionPane.showMessageDialog(this, "Numéro de carnet invalide"); 
        }else if(jComboBox3.getSelectedIndex()==0 && res1==true) {
           JOptionPane.showMessageDialog(this, "Ce numéro carnet épargne est déjà utilisé");  
        }else if(jComboBox3.getSelectedIndex()==1 && res2==true) {    
            JOptionPane.showMessageDialog(this, "Ce numéro carnet tontine est déjà utilisé"); 
        } else if(jComboBox3.getSelectedIndex()==2 && res1==true) {    
            JOptionPane.showMessageDialog(this, "Ce numéro carnet épargne est déjà utilisé"); 
        } else if(jComboBox3.getSelectedIndex()==2 && res2==true) {    
            JOptionPane.showMessageDialog(this, "Ce numéro carnet tontine est déjà utilisé"); 
        } else if (demoDateField1.getDate()==null && (jComboBox3.getSelectedIndex()==0 ||  jComboBox3.getSelectedIndex()==2)) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner la date d'adhésion Epargne"); 
        } else if (demoDateField2.getDate()==null && (jComboBox3.getSelectedIndex()==1 ||  jComboBox3.getSelectedIndex()==2)) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner la date d'adhésion Tontine"); 
        } else  {
           
            ResultSet rs=null;
            ResultSet rs2=null;
            int id;
            String beneficiaire= "enfant";
            String type_representant="tuteur";
            boolean success= true;
          //  Date datenais = null;
            java.sql.Date sqlDate=null;
            java.sql.Date sqlDate2=null;
            java.sql.Date sqlDate3=null;
            if (demoDateField3.getDate()!=null) sqlDate=new java.sql.Date(demoDateField3.getDate().getTime());
            if (demoDateField1.getDate()!=null)  sqlDate2=new java.sql.Date(demoDateField1.getDate().getTime());
            if (demoDateField2.getDate()!=null) sqlDate3=new java.sql.Date(demoDateField2.getDate().getTime());
           // String datenaiss=jFormattedTextField2.getText();
            if (jComboBox5.getSelectedIndex()==0){
                beneficiaire="parent/tuteur";
            }
            if (jComboBox1.getSelectedIndex()==1){
                type_representant="parent";
            }
//             DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
//            try {
//                datenais= formatter.parse(datenaiss);
//                sqlDate= new java.sql.Date(datenais.getTime());
//            } catch (ParseException ex) {
//                Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
//            }
             
            // Vérifier si le représentant légal est dans la base de données et obtenir son id 
            String sql0="SELECT id_representant_legal FROM representant_legal WHERE Nom= '" + jTextField10.getText() + "' AND lower(Prenom)= '"+jTextField13.getText().toLowerCase(Locale.FRENCH)+ "'";
            String sql01="SELECT idProfil_enfant FROM Profil_enfant WHERE Nom= '" + jTextField3.getText() + "' AND lower(Prenoms)= '"+jTextField4.getText().toLowerCase(Locale.FRENCH)+ "'";
            
            // Vérifier numero carnet 
            connect=Connect.ConnectDb();
            Statement stmt = null;
              try {
                  stmt= connect.createStatement();
                   rs=stmt.executeQuery(sql0);
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              stmt = null;
              
              try {
                   stmt= connect.createStatement();
                   rs2=stmt.executeQuery(sql01);
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
              } catch (SQLException ex) {
                  Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
              }
              
              try {
                  if (rs.next() && jComboBox2.getSelectedIndex()==0){
                       // id = rs.getInt("id_representant_legal");
                        JOptionPane.showMessageDialog(null, "Attention le représentant légal indiqué est déjà enregistré. Veuillez le sélectionner dans la liste déroulante");
//                        String sql2 = "INSERT INTO Profil_enfant " + 
//                     "VALUES ("+ null +", '"+ jTextField3.getText()+ "', '"+ jTextField4.getText() +"', '"+ enfant_photourl+
//                     "', '"+sqlDate+"', '"+jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
//                     "', '"+beneficiaire+ "','"+id+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"');";
//                       System.out.println(sql2);
//                       pst=connect.prepareStatement(sql2);
//                       pst.execute();
                        
                       // Refresh rep leg. list 
                        
                        int i;
                       int count =jComboBox2.getItemCount();
                       for (i=2; i<count; i++) {
                      //      System.out.println( "c'est ici"+(String)jComboBox2.getItemAt(i) +count);
                           jComboBox2.removeItemAt(2);
                         
                       } 
                        
                       ResultSet rst3=null;
                       String sql="SELECT * FROM representant_legal ORDER BY TRIM(Nom) ASC , TRIM(Prenom) ASC;";
                       Statement stmt3 = null;
                       try {
                            stmt3= connect.createStatement();
                            rst3=stmt3.executeQuery(sql);
                            while(rst3.next()) {
                                 jComboBox2.addItem(rst3.getString(3)+", "+rst3.getString(4));
                             }
                           
                       } catch (SQLException ex) {
                        Logger.getLogger(Adhesion_enfant.class.getName()).log(Level.SEVERE, null, ex);
                       }
                       rst3.close();
                       stmt3.close();
                       success=false;
                  }else if (rs2.next() ){
                      JOptionPane.showMessageDialog(null, "Attention l'enfant indiqué est déjà enregistré");
                         success=false;
                  }else {
                           String numcarn="";
                           if(jComboBox3.getSelectedIndex()==0) {
                               numcarn=jFormattedTextField2.getText();
                           } else if (jComboBox3.getSelectedIndex()==1){
                               numcarn=jFormattedTextField3.getText();
                           } else {
                                numcarn=jFormattedTextField2.getText() +"-"+jFormattedTextField3.getText();
                           }
                           
                           // part sociale 
                            int partsociale=0;
                            if(!jTextField17.getText().isEmpty())
                              partsociale=Integer.parseInt(jTextField17.getText());
                       if(jComboBox2.getSelectedIndex()==0){
                       System.out.println(jTextField14.getText());
                       String sql1 = "INSERT INTO representant_legal " + 
                      "VALUES ("+ null +", '"+ type_representant+ "', '"+ jTextField10.getText() +"', '"+ jTextField13.getText() +
                      "', '"+jTextField14.getText()+"', '"+jFormattedTextField1.getText()+"', '"+jTextField20.getText()+"', '"+String.valueOf(jComboBox6.getSelectedItem()).trim()+ "', '"+replegal_photourl+
                      "');";
                       System.out.println("Photourl" +replegal_photourl);
                       pst=connect.prepareStatement(sql1, Statement.RETURN_GENERATED_KEYS);
                       pst.execute();
                       ResultSet rst= pst.getGeneratedKeys();
                       int generatedkey=0;
                       if(rst.next()){
                           generatedkey= rst.getInt(1);
                       }
                       System.out.println("generated key" + generatedkey);
//                       String sql2 = "INSERT INTO Profil_enfant " + 
//                      "VALUES ("+ null +", '"+ jTextField3.getText()+ "', '"+ jTextField4.getText() +"', '"+ enfant_photourl+
//                       "', '"+sqlDate+"', '"+jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
//                       "', '"+beneficiaire+ "','"+generatedkey+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField10.getText())+ "', '"+partsociale+"', '"+sqlDate2+"', '"+sqlDate3+"');";
                        String sql2 = "INSERT INTO Profil_enfant " + 
                     "VALUES ("+ null +", '"+ jTextField3.getText()+ "', '"+ jTextField4.getText() +"', '"+ enfant_photourl;
                     if(sqlDate==null){
                         sql2=sql2+"', null, '"+ jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
                     "', '"+beneficiaire+ "','"+generatedkey+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField16.getText())+ "', '"+partsociale;
                     }else if(sqlDate!=null){
                         sql2=sql2+"', '"+sqlDate+"', '"+jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
                     "', '"+beneficiaire+ "','"+generatedkey+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField16.getText())+ "', '"+partsociale;
                     } 
                     
                     if (sqlDate2==null){
                         sql2=sql2+"', null,";
                     } else if (sqlDate2!=null){
                          sql2=sql2+"','"+sqlDate2+"',";
                     }
                     
                     if (sqlDate3==null){ 
                         sql2=sql2+"null"+", 1);";
                     } else if (sqlDate3!=null){   
                         sql2=sql2+"'"+sqlDate3+"', 1);";
                     }
                       System.out.println(sql2);
                       pst=connect.prepareStatement(sql2, Statement.RETURN_GENERATED_KEYS);
                       pst.execute();
                       
                       // La suite 
                  
                       rst= pst.getGeneratedKeys();
                      
                       int generatdkey=0;
                       if(rst.next()){
                           generatdkey= rst.getInt(1);
                       }
                       
                      
                       
                        if(!jTextField2.getText().isEmpty() && jTextField2.isEnabled()) {
                             java.util.Date dt = new java.util.Date();
                             java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                             String currentTime = sdf.format(dt);
                             String sql002 = "INSERT INTO Epargne VALUES ("+null+", '"+ currentTime + "', '"+"Dépot initial"+"', '"+jTextField2.getText()+"', '"+generatdkey+"', '"+"Enfant"+"');";
                             pst=connect.prepareStatement(sql002);                  
                             pst.execute();
                        }
                       
                       int i;
                       int count =jComboBox2.getItemCount();
                       for (i=2; i<count; i++) {
                            System.out.println( "c'est ici"+(String)jComboBox2.getItemAt(i) +count);
                           jComboBox2.removeItemAt(2);
                         
                       }
                       
                       
                 
                 
                       ResultSet rst3=null;
                       String sql="SELECT * FROM representant_legal ORDER BY TRIM(Nom) ASC , TRIM(Prenom) ASC;";
                       Statement stmt3 = null;
                       try {
                            stmt3= connect.createStatement();
                            rst3=stmt3.executeQuery(sql);
                            while(rst3.next()) {
                                 jComboBox2.addItem(rst3.getString(3)+", "+rst3.getString(4));
                             }
                           
                       } catch (SQLException ex) {
                        Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
                       }
                       rst3.close();
                       stmt3.close();
                         
                        }else {   
                           int generated=0;
                           String sql4="SELECT id_representant_legal FROM representant_legal WHERE Nom= '" + jTextField10.getText() + "' AND lower(Prenom)= '"+jTextField13.getText().toLowerCase(Locale.FRENCH)+ "'";
                           connect=Connect.ConnectDb();
                           Statement stmt2 = null;                         
                           
                           try {
                              stmt2= connect.createStatement();
                              rs=stmt2.executeQuery(sql4);
                              
                
                  
                  //    JOptionPane.showMessageDialog( this, "hostel name already exists","Error", JOptionPane.ERROR_MESSAGE);
                  //      y3.setText("");
                  //      y3.requestDefaultFocus();
                  //     return;
                           } catch (SQLException ex) {
                             Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
                           }
                           if(rs.next()){
                           generated= rs.getInt(1);
                           
                      String sql2 = "INSERT INTO Profil_enfant " + 
                     "VALUES ("+ null +", '"+ jTextField3.getText()+ "', '"+ jTextField4.getText() +"', '"+ enfant_photourl;
                     if(sqlDate==null){
                         sql2=sql2+"', null, '"+ jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
                     "', '"+beneficiaire+ "','"+generated+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField16.getText())+ "', '"+partsociale;
                     }else if(sqlDate!=null){
                         sql2=sql2+"', '"+sqlDate+"', '"+jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
                     "', '"+beneficiaire+ "','"+generated+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField16.getText())+ "', '"+partsociale;
                     } 
                     
                     if (sqlDate2==null){
                         sql2=sql2+"', null,";
                     } else if (sqlDate2!=null){
                          sql2=sql2+"','"+sqlDate2+"',";
                     } 
                     
                     if (sqlDate3==null){ 
                         sql2=sql2+"null"+",1);";
                     } else if (sqlDate3!=null){   
                         sql2=sql2+"'"+sqlDate3+"', 1);";
                     }
                  //   "', '"+sqlDate+"', '"+jTextField6.getText()+"', '"+jTextField11.getText()+"', '"+jTextField9.getText()+ "', '"+String.valueOf(jComboBox3.getSelectedItem()).trim()+
                  //   "', '"+beneficiaire+ "','"+generated+"', '"+String.valueOf(jComboBox4.getSelectedItem()).trim()+"', '"+ numcarn+ "', '"+ Integer.valueOf(jTextField10.getText())+ "', '"+partsociale+"', '"+sqlDate2+"', '"+sqlDate3+"');";
                       pst=connect.prepareStatement(sql2, Statement.RETURN_GENERATED_KEYS);
                       pst.execute();
                       ResultSet rst= pst.getGeneratedKeys();
                               System.out.println("sql2"+sql2);
                       
                       int generatdkey=0;
                       if(rst.next()){
                           generatdkey= rst.getInt(1);
                       }
                       rst.close();
                      
                       stmt2.close();
                        rs.close();
                         rs2.close();
       
       stmt.close();
       
                      
                       
                        if(!jTextField2.getText().isEmpty() && jTextField2.isEnabled()) {
                             java.util.Date dt = new java.util.Date();
                 java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                 String currentTime = sdf.format(dt);
                            String sql002 = "INSERT INTO Epargne VALUES ("+null+", '"+ currentTime + "', '"+"Dépot initial"+"', '"+jTextField2.getText()+"', '"+generatdkey+"', '"+"Enfant"+"');";
                             pst=connect.prepareStatement(sql002);                  
                             pst.execute();
                        }
                           }else {
                               success=false;
                                JOptionPane.showMessageDialog(null, "Enregistrement impossible");
                           }}} 
              } catch (SQLException ex) {
                  Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
                  success= false;
              }
              
        
      
              
              if (success){
                  JOptionPane.showMessageDialog(null, "Enregistrement effectué avec succès");
                  jTextField3.setText("");
                  jTextField4.setText("");
                  jTextField6.setText("");
                  jTextField11.setText("");
                  jFormattedTextField2.setText("");
                  jFormattedTextField3.setText("");
                  demoDateField3.setDate(null);
                  demoDateField2.setDate(null);
                  demoDateField1.setDate(null);
//                  jFormattedTextField2.setText("dd/MM/yyyy");
                  jTextField9.setText("");
                  jTextField10.setText("");
                  jTextField13.setText("");
                  jTextField14.setText("");
              //    jFormattedTextField2.setText("(+IND-)NN-NN-NN-NN");
                  jFormattedTextField1.setText("");
                  
                  jTextField20.setText("");
                   jTextField16.setText("");
                   jTextField17.setText("");
                   jTextField2.setText("");
                   jTextField5.setText("");
                   jLabel2.setIcon(new ImageIcon(new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH)));
                   jLabel16.setIcon(new ImageIcon(new ImageIcon(
                    getClass().getResource("blank.png")).getImage().getScaledInstance(90, 90,
                    Image.SCALE_SMOOTH)));
                  //jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png")));
                  //jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/blank.png")));
                  jComboBox2.setSelectedIndex(0);
                  this.main.refresh();
           }
        }
          
        try {
          if(connect!=null)  connect.close();
          if(pst!=null)   pst.close();
        } catch (SQLException ex) {
            Logger.getLogger(Adh_enfant.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Adh_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Adh_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Adh_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Adh_enfant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Adh_enfant(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField1;
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField2;
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField3;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JFormattedTextField jFormattedTextField3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

}
