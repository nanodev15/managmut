/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nehemie_mutuelle;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author elommarcarnold
 */
public class MiseTontine extends javax.swing.JFrame {
    private int idTontine;
    private Date DateTontine;
    private int idEpargnant; 
    private String TypeEpargnant;
    private int operation; // add or modify  add=0 modify=1
    private int mise;
    private String carnet ="";
    private Boolean supp =false;
   
    
    // connection
    Connection connect=null;
    PreparedStatement pst=null;
    Connect conn=new Connect();

    /** Creates new form MiseTontine */
    public MiseTontine() {
        initComponents();
    }
    
    public void setMise(int mise){
        this.mise=mise;
        if(mise <=1000) {
            int j=(mise/100-1);
         System.out.println("mise/100-1"+ j);
        jComboBox1.setSelectedIndex(mise/100 -1);}
        else {
           jComboBox1.setSelectedIndex(jComboBox1.getItemCount()-1); 
           jTextField1.setText(String.valueOf(mise));
        }
    }
    
    public MiseTontine(int idEpargnant, String TypeEpargnant, Date DateTontine, int operation) {
        //Initialisation des champs
        this.idEpargnant=idEpargnant;
        this.TypeEpargnant=TypeEpargnant;
        this.DateTontine=DateTontine;
        this.operation=operation;
         
        initComponents();
    }
    
     public MiseTontine(int idEpargnant, String TypeEpargnant, Date DateTontine, int operation, String carnet) {
        //Initialisation des champs
        this.idEpargnant=idEpargnant;
        this.TypeEpargnant=TypeEpargnant;
        this.DateTontine=DateTontine;
        this.operation=operation;
        this.carnet = carnet;
        this.supp =true;
         
        initComponents();
    }
    
    public int getMise(){
        return this.mise;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel1.setText("Mise:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "300", "400", "500", "600", "700", "800", "900", "1000", "Autre" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 18)); // NOI18N
        jLabel2.setText("Autre Valeur:");

        jTextField1.setEnabled(false);
        DocumentFilter numericFilter = new DocumentFilter(){

            @Override
            public void insertString(FilterBypass fb, int offset,
                String string, AttributeSet attr)
            throws BadLocationException {
                fb.insertString(offset, string.replaceAll("[^\\d]", ""), attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs)
            throws BadLocationException {

                fb.replace(offset, length, text.replaceAll("[^\\d]", ""), attrs);
            }
        };
        ((AbstractDocument) jTextField1.getDocument()).setDocumentFilter(numericFilter);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/banner_mise.png"))); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jComboBox1, 0, 118, Short.MAX_VALUE)
                    .add(jTextField1))
                .add(68, 68, 68))
            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(39, 39, 39)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 43, Short.MAX_VALUE)
                .add(jButton1)
                .add(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()== (jComboBox1.getItemCount()-1) && jTextField1.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez entrer la valeur de la mise");
        } else {
        boolean success = true; 
        java.sql.Date sqlDate=new java.sql.Date(DateTontine.getTime()); // convert DateTontine to sql date
        if (operation==0) {   // Operation d'ajout 
            
            if(jComboBox1.getSelectedIndex()== (jComboBox1.getItemCount()-1)) { mise = Integer.valueOf(jTextField1.getText()); } else { 
               mise=Integer.valueOf((String) jComboBox1.getSelectedItem());
            }
            String sql0="INSERT INTO Tontine VALUES ("+ null + ", '"+sqlDate+ "', "+null+ ", '"+ mise+ "', '"+idEpargnant+"', '"+TypeEpargnant+"');"; 
            connect=Connect.ConnectDb();
              try {
                  // stmt= connect.createStatement();
                   pst=connect.prepareStatement(sql0, Statement.RETURN_GENERATED_KEYS);
                       pst.execute();
                       ResultSet rst= pst.getGeneratedKeys();
                     
                       if(rst.next()){
                           idTontine= rst.getInt(1);
                       }
                       
                       
                       if (supp) {
                            String sql2 = "INSERT INTO enrtontinesupp VALUES ("+ null + ", '" +idTontine+"', '"+carnet+"', 'ajout')";
                            pst=connect.prepareStatement(sql2);
                            pst.execute();                           
                       }
                       
              } catch (SQLException ex) {
                  Logger.getLogger(MiseTontine.class.getName()).log(Level.SEVERE, null, ex);
                  success= false;
              }
              
              if (success){
                  JOptionPane.showMessageDialog(null, "Mise enregistrée  avec succès");
                  this.dispose();
               }   
        } else if (operation==1) {  // Operation de modification
            int selectedvalue; 
            connect=Connect.ConnectDb();
            if(jComboBox1.getSelectedIndex()!= (jComboBox1.getItemCount()-1)) {
                selectedvalue= (int) jComboBox1.getSelectedItem();
            } else {
                selectedvalue= Integer.valueOf(jTextField1.getText());
            }
            
            if (selectedvalue==mise) JOptionPane.showMessageDialog(null, "Veuillez sélectionner une autre valeur");
            else {
                // modication
                String sql0="UPDATE Tontine SET Mise = '"+ selectedvalue +"' WHERE DateTontine = '"+sqlDate+"'; "; 
                try {
                 pst=connect.prepareStatement(sql0);
                } catch (SQLException ex) {
                 success=false;
                 Logger.getLogger(MiseTontine.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                try {
                 pst.execute();
               } catch (SQLException ex) {
                 success=false;
                 Logger.getLogger(MiseTontine.class.getName()).log(Level.SEVERE, null, ex);
               }
               
               if (success) {
               JOptionPane.showMessageDialog(null, "Toutes les modifications ont été prises en comptes avec succès");
               this.dispose();
               }
                
                
            }
            
        }
       }      
            
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex()== (jComboBox1.getItemCount()-1)){
            jTextField1.setEnabled(true);
        } else {
            jTextField1.setText("");
            jTextField1.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiseTontine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiseTontine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiseTontine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiseTontine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiseTontine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
