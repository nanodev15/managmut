/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package nehemie_mutuelle;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author elommarcarnold
 */
public class CreditLibre extends javax.swing.JFrame {
    private Connection conn;
    private String idloan="";
    private loanmanager lnmanger; 
    private String action; 
    private int idrembours;
    private boolean type;
    /** Creates new form CreditLibre */
    public CreditLibre() {
        initComponents();
    }
    
     public CreditLibre(loanmanager lnmanger, String idloan, String action, boolean type) {
         this.idloan = idloan;
         this.lnmanger = lnmanger;
         this.action = action;
         this.type= type;
         
        initComponents();
        if (action.equals("penality")) {
            jTextArea1.setText("Pénalités de remboursements");
            jTextArea1.setEnabled(false);
        } else {
        jTextArea1.setEnabled(true);
        }
    }
     
    public CreditLibre(loanmanager lnmanger, String idloan, String action, int idrembours, boolean type) {
         this.idloan = idloan;
         this.lnmanger = lnmanger;
         this.action = action;
         this.idrembours= idrembours;
         this.type= type;
         
        initComponents();
          try {
                    
                
                
                    fillwithvalues();
                } catch (SQLException ex) {
                    Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
                }
            
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        demoDateField1 = new com.jp.samples.comp.calendarnew.DemoDateField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        demoDateField1.setYearDigitsAmount(4);
        demoDateField1.setDate(new Date());

        jLabel1.setText("Date de remboursement:");

        jLabel2.setText("Montant:");

        DocumentFilter numericFilter = new DocumentFilter(){

            @Override
            public void insertString(FilterBypass fb, int offset,
                String string, AttributeSet attr)
            throws BadLocationException {
                fb.insertString(offset, string.replaceAll("[^\\d]", ""), attr);
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length,
                String text, AttributeSet attrs)
            throws BadLocationException {

                fb.replace(offset, length, text.replaceAll("[^\\d]", ""), attrs);
            }
        };
        ((AbstractDocument) jTextField1.getDocument()).setDocumentFilter(numericFilter);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Espèce", "Chèque", "Virement" }));

        jLabel3.setText("Type de remboursement");

        jLabel4.setText("Libellé");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/save-icon.png"))); // NOI18N
        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nehemie_mutuelle/rembrecord.png"))); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(50, 50, 50)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel4))
                .add(121, 121, 121)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 253, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(demoDateField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 171, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(29, 29, 29)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(demoDateField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(jLabel2))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(jLabel3))
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(25, 25, 25)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void fillwithvalues() throws SQLException {
        String sql = "SELECT * FROM rembours_libre WHERE idrembours_libre='"+this.idrembours+"' ";
         conn = Connect.ConnectDb();
         PreparedStatement pst = conn.prepareStatement(sql);
         ResultSet rst = pst.executeQuery(); 
         
         if (rst.next()) {
             demoDateField1.setDate(new Date(rst.getDate(7).getTime())); 
             jTextField1.setText(String.valueOf(rst.getBigDecimal("montant")));
             jComboBox1.setSelectedIndex(rst.getInt("typerembours"));
             jTextArea1.setText(rst.getString("libelle"));
             
         }
                 
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling co
        if (type  == true ) {
        if (action.equalsIgnoreCase("new") || action.equalsIgnoreCase("penality")) {
        if (jTextArea1.getText().length() > 45) {
            JOptionPane.showMessageDialog(this, "Pas plus de 45 lettres pour le libellé");
        } else if (jTextField1.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Veuillez entrer un montant");
        }else {
            // INSERT record in database
            Boolean success = true;
            conn = Connect.ConnectDb();
            String sql = " INSERT INTO rembours_libre VALUES ("+null+", '"+this.idloan+"', '"+Double.parseDouble(jTextField1.getText())+"', '"+jComboBox1.getSelectedIndex()+"', '"+jTextArea1.getText()+"', '"+Login.connectedlogin+"', '"+new java.sql.Date(this.demoDateField1.getDate().getTime())+"') ";
            System.out.println("sql vaut"+sql);
            PreparedStatement pst;
         
            try {
                pst = conn.prepareStatement(sql);
                pst.execute();
            } catch (SQLException ex) {
                success = false;
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            if (success = false){
                      JOptionPane.showMessageDialog(this, "Erreur d'enregistrement");

            } else {
                      JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
            }
            
            
            try {
                this.lnmanger.getfreeloandata();
            } catch (Exception ex) {
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        } else if (action.equalsIgnoreCase("update")) {
            if (jTextArea1.getText().length() > 45) {
            JOptionPane.showMessageDialog(this, "Pas plus de 45 lettres pour le libellé");
        } else {              
              Boolean success = true;
              String sql="UPDATE rembours_libre SET montant='"+Double.valueOf(jTextField1.getText())+"', typerembours='"+jComboBox1.getSelectedIndex()+"', libelle='"+jTextArea1.getText()+ "', DateEnr='"+ new java.sql.Date(demoDateField1.getDate().getTime())+"', lastmod='"+Login.connectedlogin+"' WHERE idrembours_libre='"+ idrembours+"'";
              Statement stmt=null;
              conn = Connect.ConnectDb();
              try {
                 stmt = conn.createStatement();
                 stmt.executeUpdate(sql);
             
                 
              } catch (SQLException ex) {
                 success = false; 
                 Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);

              }
             
             
              if (success) JOptionPane.showMessageDialog(this, "Modification effectuée avec succès");
              else JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement");
             
              try {
                this.lnmanger.getfreeloandata();
              } catch (Exception ex) {
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
              }
             
        }
             
             
       }} else if (type== false) {
            if (action.equalsIgnoreCase("new")) {
        if (jTextArea1.getText().length() > 45) {
            JOptionPane.showMessageDialog(this, "Pas plus de 45 lettres pour le libellé");
        } else {
            // INSERT record in database
            Boolean success = true;
            conn = Connect.ConnectDb();
            String sql = " INSERT INTO rembours_terme VALUES ("+null+", '"+this.idloan+"', '"+new java.sql.Date(this.demoDateField1.getDate().getTime())+"', '"+ jComboBox1.getSelectedIndex()+ "', "+jTextArea1.getText()+"',  '"+ Double.parseDouble(jTextField1.getText())+"', '"+Login.connectedlogin+"')";
            PreparedStatement pst;
         
            try {
                pst = conn.prepareStatement(sql);
                pst.execute();
            } catch (SQLException ex) {
                success = false;
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            if (success = false){
                      JOptionPane.showMessageDialog(this, "Erreur d'enregistrement");

            } else {
                      JOptionPane.showMessageDialog(this, "Enregistrement effectué avec succès");
            }
            
            
            try {
                this.lnmanger.getfreeloandata();
            } catch (Exception ex) {
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        } else if (action.equalsIgnoreCase("update")) {
            if (jTextArea1.getText().length() > 45) {
              
            
            
            
            
            
        } else {
                
              Boolean success = true;
              String sql="UPDATE rembours_terme SET montantpay='"+Double.valueOf(jTextField1.getText())+"', typerembours='"+jComboBox1.getSelectedIndex()+"', libelle='"+jTextArea1.getText()+ "', daterembours='"+ new java.sql.Date(demoDateField1.getDate().getTime())+"', lastmod='"+Login.connectedlogin+"' WHERE idrembours_terme='"+ idrembours+"'";
              Statement stmt=null;
              conn = Connect.ConnectDb();
             try {
                 stmt = conn.createStatement();
                 stmt.executeUpdate(sql);
             
                 
             } catch (SQLException ex) {
                 success = false; 
                 Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);

             }
             
             
             if (success) JOptionPane.showMessageDialog(this, "Modification effectuée avec succès");
             else JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement");
             
              try {
                this.lnmanger.getfreeloandata();
            } catch (Exception ex) {
                Logger.getLogger(CreditLibre.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             }
           
       }}
        
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreditLibre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreditLibre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreditLibre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreditLibre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreditLibre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.jp.samples.comp.calendarnew.DemoDateField demoDateField1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void refresh() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
